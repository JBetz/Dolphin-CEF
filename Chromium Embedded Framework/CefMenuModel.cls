"Filed out from Dolphin Smalltalk"!

CefReferenceCountedObject subclass: #CefMenuModel
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_add_check_item _OffsetOf_add_item _OffsetOf_add_radio_item _OffsetOf_add_separator _OffsetOf_add_sub_menu _OffsetOf_clear _OffsetOf_get_accelerator _OffsetOf_get_accelerator_at _OffsetOf_get_color _OffsetOf_get_color_at _OffsetOf_get_command_id_at _OffsetOf_get_count _OffsetOf_get_group_id _OffsetOf_get_group_id_at _OffsetOf_get_index_of _OffsetOf_get_label _OffsetOf_get_label_at _OffsetOf_get_sub_menu _OffsetOf_get_sub_menu_at _OffsetOf_get_type _OffsetOf_get_type_at _OffsetOf_has_accelerator _OffsetOf_has_accelerator_at _OffsetOf_insert_check_item_at _OffsetOf_insert_item_at _OffsetOf_insert_radio_item_at _OffsetOf_insert_separator_at _OffsetOf_insert_sub_menu_at _OffsetOf_is_checked _OffsetOf_is_checked_at _OffsetOf_is_enabled _OffsetOf_is_enabled_at _OffsetOf_is_sub_menu _OffsetOf_is_visible _OffsetOf_is_visible_at _OffsetOf_remove _OffsetOf_remove_accelerator _OffsetOf_remove_accelerator_at _OffsetOf_remove_at _OffsetOf_set_accelerator _OffsetOf_set_accelerator_at _OffsetOf_set_checked _OffsetOf_set_checked_at _OffsetOf_set_color _OffsetOf_set_color_at _OffsetOf_set_command_id_at _OffsetOf_set_enabled _OffsetOf_set_enabled_at _OffsetOf_set_font_list _OffsetOf_set_font_list_at _OffsetOf_set_group_id _OffsetOf_set_group_id_at _OffsetOf_set_label _OffsetOf_set_label_at _OffsetOf_set_visible _OffsetOf_set_visible_at'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
CefMenuModel guid: (GUID fromString: '{30c27b48-09c9-497e-a671-138609d3a346}')!
CefMenuModel addClassConstant: '_OffsetOf_add_check_item' value: 16r28!
CefMenuModel addClassConstant: '_OffsetOf_add_item' value: 16r24!
CefMenuModel addClassConstant: '_OffsetOf_add_radio_item' value: 16r2C!
CefMenuModel addClassConstant: '_OffsetOf_add_separator' value: 16r20!
CefMenuModel addClassConstant: '_OffsetOf_add_sub_menu' value: 16r30!
CefMenuModel addClassConstant: '_OffsetOf_clear' value: 16r18!
CefMenuModel addClassConstant: '_OffsetOf_get_accelerator' value: 16rD4!
CefMenuModel addClassConstant: '_OffsetOf_get_accelerator_at' value: 16rD8!
CefMenuModel addClassConstant: '_OffsetOf_get_color' value: 16rE4!
CefMenuModel addClassConstant: '_OffsetOf_get_color_at' value: 16rE8!
CefMenuModel addClassConstant: '_OffsetOf_get_command_id_at' value: 16r54!
CefMenuModel addClassConstant: '_OffsetOf_get_count' value: 16r1C!
CefMenuModel addClassConstant: '_OffsetOf_get_group_id' value: 16r74!
CefMenuModel addClassConstant: '_OffsetOf_get_group_id_at' value: 16r78!
CefMenuModel addClassConstant: '_OffsetOf_get_index_of' value: 16r50!
CefMenuModel addClassConstant: '_OffsetOf_get_label' value: 16r5C!
CefMenuModel addClassConstant: '_OffsetOf_get_label_at' value: 16r60!
CefMenuModel addClassConstant: '_OffsetOf_get_sub_menu' value: 16r84!
CefMenuModel addClassConstant: '_OffsetOf_get_sub_menu_at' value: 16r88!
CefMenuModel addClassConstant: '_OffsetOf_get_type' value: 16r6C!
CefMenuModel addClassConstant: '_OffsetOf_get_type_at' value: 16r70!
CefMenuModel addClassConstant: '_OffsetOf_has_accelerator' value: 16rBC!
CefMenuModel addClassConstant: '_OffsetOf_has_accelerator_at' value: 16rC0!
CefMenuModel addClassConstant: '_OffsetOf_insert_check_item_at' value: 16r3C!
CefMenuModel addClassConstant: '_OffsetOf_insert_item_at' value: 16r38!
CefMenuModel addClassConstant: '_OffsetOf_insert_radio_item_at' value: 16r40!
CefMenuModel addClassConstant: '_OffsetOf_insert_separator_at' value: 16r34!
CefMenuModel addClassConstant: '_OffsetOf_insert_sub_menu_at' value: 16r44!
CefMenuModel addClassConstant: '_OffsetOf_is_checked' value: 16rAC!
CefMenuModel addClassConstant: '_OffsetOf_is_checked_at' value: 16rB0!
CefMenuModel addClassConstant: '_OffsetOf_is_enabled' value: 16r9C!
CefMenuModel addClassConstant: '_OffsetOf_is_enabled_at' value: 16rA0!
CefMenuModel addClassConstant: '_OffsetOf_is_sub_menu' value: 16r14!
CefMenuModel addClassConstant: '_OffsetOf_is_visible' value: 16r8C!
CefMenuModel addClassConstant: '_OffsetOf_is_visible_at' value: 16r90!
CefMenuModel addClassConstant: '_OffsetOf_remove' value: 16r48!
CefMenuModel addClassConstant: '_OffsetOf_remove_accelerator' value: 16rCC!
CefMenuModel addClassConstant: '_OffsetOf_remove_accelerator_at' value: 16rD0!
CefMenuModel addClassConstant: '_OffsetOf_remove_at' value: 16r4C!
CefMenuModel addClassConstant: '_OffsetOf_set_accelerator' value: 16rC4!
CefMenuModel addClassConstant: '_OffsetOf_set_accelerator_at' value: 16rC8!
CefMenuModel addClassConstant: '_OffsetOf_set_checked' value: 16rB4!
CefMenuModel addClassConstant: '_OffsetOf_set_checked_at' value: 16rB8!
CefMenuModel addClassConstant: '_OffsetOf_set_color' value: 16rDC!
CefMenuModel addClassConstant: '_OffsetOf_set_color_at' value: 16rE0!
CefMenuModel addClassConstant: '_OffsetOf_set_command_id_at' value: 16r58!
CefMenuModel addClassConstant: '_OffsetOf_set_enabled' value: 16rA4!
CefMenuModel addClassConstant: '_OffsetOf_set_enabled_at' value: 16rA8!
CefMenuModel addClassConstant: '_OffsetOf_set_font_list' value: 16rEC!
CefMenuModel addClassConstant: '_OffsetOf_set_font_list_at' value: 16rF0!
CefMenuModel addClassConstant: '_OffsetOf_set_group_id' value: 16r7C!
CefMenuModel addClassConstant: '_OffsetOf_set_group_id_at' value: 16r80!
CefMenuModel addClassConstant: '_OffsetOf_set_label' value: 16r64!
CefMenuModel addClassConstant: '_OffsetOf_set_label_at' value: 16r68!
CefMenuModel addClassConstant: '_OffsetOf_set_visible' value: 16r94!
CefMenuModel addClassConstant: '_OffsetOf_set_visible_at' value: 16r98!
CefMenuModel comment: ''!
!CefMenuModel categoriesForClass!External-Data-Structured! !
!CefMenuModel methodsFor!

_addCheckItem_cefMenuModel: cefMenuModel commandId: commandId label: label
	<stdcall: sdword add_check_item CefMenuModel* sdword CefString*>
	^self invalidCall: _failureCode!

_addItem_cefMenuModel: cefMenuModel commandId: commandId label: label
	<stdcall: sdword add_item CefMenuModel* sdword CefString*>
	^self invalidCall: _failureCode!

_addRadioItem_cefMenuModel: cefMenuModel commandId: commandId label: label groupId: groupId
	<stdcall: sdword add_radio_item CefMenuModel* sdword CefString* sdword>
	^self invalidCall: _failureCode!

_addSeparator_cefMenuModel: cefMenuModel
	<stdcall: sdword add_separator CefMenuModel*>
	^self invalidCall: _failureCode!

_addSubMenu_cefMenuModel: cefMenuModel commandId: commandId label: label
	<stdcall: CefMenuModel* add_sub_menu CefMenuModel* sdword CefString*>
	^self invalidCall: _failureCode!

_callClear_cefMenuModel: cefMenuModel
	<stdcall: sdword clear CefMenuModel*>
	^self invalidCall: _failureCode!

_getCommandIdAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword get_command_id_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_getCount_cefMenuModel: cefMenuModel
	<stdcall: dword get_count CefMenuModel*>
	^self invalidCall: _failureCode!

_getGroupId_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword get_group_id CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_getGroupIdAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword get_group_id_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_getIndexOf_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword get_index_of CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_getLabel_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: CefStringUserfree* get_label CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_getLabelAt_cefMenuModel: cefMenuModel index: index
	<stdcall: CefStringUserfree* get_label_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_getSubMenu_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: CefMenuModel* get_sub_menu CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_getSubMenuAt_cefMenuModel: cefMenuModel index: index
	<stdcall: CefMenuModel* get_sub_menu_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_getType_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword get_type CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_getTypeAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword get_type_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_insertCheckItemAt_cefMenuModel: cefMenuModel index: index commandId: commandId label: label
	<stdcall: sdword insert_check_item_at CefMenuModel* dword sdword CefString*>
	^self invalidCall: _failureCode!

_insertItemAt_cefMenuModel: cefMenuModel index: index commandId: commandId label: label
	<stdcall: sdword insert_item_at CefMenuModel* dword sdword CefString*>
	^self invalidCall: _failureCode!

_insertRadioItemAt_cefMenuModel: cefMenuModel index: index commandId: commandId label: label groupId: groupId
	<stdcall: sdword insert_radio_item_at CefMenuModel* dword sdword CefString* sdword>
	^self invalidCall: _failureCode!

_insertSeperatorAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword insert_separator_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_insertSubMenuAt_cefMenuModel: cefMenuModel index: index commandId: commandId label: label
	<stdcall: CefMenuModel* insert_sub_menu_at CefMenuModel* dword sdword CefString*>
	^self invalidCall: _failureCode!

_isChecked_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword is_checked CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_isCheckedAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword is_checked_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_isEnabled_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword is_enabled CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_isEnabledAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword is_enabled_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_isSubMenu_cefMenuModel: cefMenuModel
	<stdcall: sdword is_sub_menu CefMenuModel*>
	^self invalidCall: _failureCode!

_isVisible_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword is_visible CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_isVisibleAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword is_visible_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_remove_cefMenuModel: cefMenuModel commandId: commandId
	<stdcall: sdword remove CefMenuModel* sdword>
	^self invalidCall: _failureCode!

_removeAt_cefMenuModel: cefMenuModel index: index
	<stdcall: sdword remove_at CefMenuModel* dword>
	^self invalidCall: _failureCode!

_setChecked_cefMenuModel: cefMenuModel commandId: commandId checked: checked
	<stdcall: sdword set_checked CefMenuModel* sdword sdword>
	^self invalidCall: _failureCode!

_setCheckedAt_cefMenuModel: cefMenuModel index: index checked: checked
	<stdcall: sdword set_checked_at CefMenuModel* dword sdword>
	^self invalidCall: _failureCode!

_setCommandIdAt_cefMenuModel: cefMenuModel index: index commandId: commandId
	<stdcall: sdword set_command_id_at CefMenuModel* dword sdword>
	^self invalidCall: _failureCode!

_setEnabled_cefMenuModel: cefMenuModel commandId: commandId enabled: enabled
	<stdcall: sdword set_enabled CefMenuModel* sdword sdword>
	^self invalidCall: _failureCode!

_setEnabledAt_cefMenuModel: cefMenuModel index: index enabled: enabled
	<stdcall: sdword set_enabled_at CefMenuModel* dword sdword>
	^self invalidCall: _failureCode!

_setGroupId_cefMenuModel: cefMenuModel commandId: commandId groupId: groupId
	<stdcall: sdword set_group_id CefMenuModel* sdword sdword>
	^self invalidCall: _failureCode!

_setGroupIdAt_cefMenuModel: cefMenuModel index: index groupId: groupId
	<stdcall: sdword set_group_id_at CefMenuModel* dword sdword>
	^self invalidCall: _failureCode!

_setLabel_cefMenuModel: cefMenuModel commandId: commandId label: label
	<stdcall: sdword set_label CefMenuModel* sdword CefString*>
	^self invalidCall: _failureCode!

_setLabelAt_cefMenuModel: cefMenuModel index: index label: label
	<stdcall: sdword set_label_at CefMenuModel* dword CefString*>
	^self invalidCall: _failureCode!

_setVisible_cefMenuModel: cefMenuModel commandId: commandId visible: visible
	<stdcall: sdword set_visible CefMenuModel* sdword sdword>
	^self invalidCall: _failureCode!

_setVisibleAt_cefMenuModel: cefMenuModel index: index visible: visible
	<stdcall: sdword set_visible_at CefMenuModel* dword sdword>
	^self invalidCall: _failureCode!

add_check_item
	"Answer the <ExternalAddress> value of the receiver's 'add_check_item' field."

	^(bytes uintPtrAtOffset: _OffsetOf_add_check_item) asExternalAddress!

add_check_item: anExternalAddress
	"Set the receiver's 'add_check_item' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_add_check_item put: anExternalAddress!

add_item
	"Answer the <ExternalAddress> value of the receiver's 'add_item' field."

	^(bytes uintPtrAtOffset: _OffsetOf_add_item) asExternalAddress!

add_item: anExternalAddress
	"Set the receiver's 'add_item' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_add_item put: anExternalAddress!

add_radio_item
	"Answer the <ExternalAddress> value of the receiver's 'add_radio_item' field."

	^(bytes uintPtrAtOffset: _OffsetOf_add_radio_item) asExternalAddress!

add_radio_item: anExternalAddress
	"Set the receiver's 'add_radio_item' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_add_radio_item put: anExternalAddress!

add_separator
	"Answer the <ExternalAddress> value of the receiver's 'add_separator' field."

	^(bytes uintPtrAtOffset: _OffsetOf_add_separator) asExternalAddress!

add_separator: anExternalAddress
	"Set the receiver's 'add_separator' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_add_separator put: anExternalAddress!

add_sub_menu
	"Answer the <ExternalAddress> value of the receiver's 'add_sub_menu' field."

	^(bytes uintPtrAtOffset: _OffsetOf_add_sub_menu) asExternalAddress!

add_sub_menu: anExternalAddress
	"Set the receiver's 'add_sub_menu' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_add_sub_menu put: anExternalAddress!

addCheckItem_commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_addCheckItem_cefMenuModel:commandId:label:
				ifAbsentBindTo: self add_check_item.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: label.
	^method value: self withArguments: arguments!

addItem_commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_addItem_cefMenuModel:commandId:label:
				ifAbsentBindTo: self add_item.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: label.
	^method value: self withArguments: arguments!

addRadioItem_commandId: commandId label: label groupId: groupId
	| method arguments |
	method := self class externalMethodAt: #_addRadioItem_cefMenuModel:commandId:label:groupId:
				ifAbsentBindTo: self add_radio_item.
	arguments := Array new: 4.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: label;
		at: 4 put: groupId.
	^method value: self withArguments: arguments!

addSeparator
	| method |
	method := self class externalMethodAt: #_addSeparator_cefMenuModel:
				ifAbsentBindTo: self add_separator.
	^method value: self withArguments: (Array with: self)!

addSubMenu_commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_addSubMenu_cefMenuModel:commandId:label:
				ifAbsentBindTo: self add_sub_menu.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: label.
	^method value: self withArguments: arguments!

callClear
	| method |
	method := self class externalMethodAt: #_callClear_cefMenuModel: ifAbsentBindTo: self clear.
	^method value: self withArguments: (Array with: self)!

clear
	"Answer the <ExternalAddress> value of the receiver's 'clear' field."

	^(bytes uintPtrAtOffset: _OffsetOf_clear) asExternalAddress!

clear: anExternalAddress
	"Set the receiver's 'clear' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_clear put: anExternalAddress!

get_accelerator
	"Answer the <ExternalAddress> value of the receiver's 'get_accelerator' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_accelerator) asExternalAddress!

get_accelerator: anExternalAddress
	"Set the receiver's 'get_accelerator' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_accelerator put: anExternalAddress!

get_accelerator_at
	"Answer the <ExternalAddress> value of the receiver's 'get_accelerator_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_accelerator_at) asExternalAddress!

get_accelerator_at: anExternalAddress
	"Set the receiver's 'get_accelerator_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_accelerator_at put: anExternalAddress!

get_color
	"Answer the <ExternalAddress> value of the receiver's 'get_color' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_color) asExternalAddress!

get_color: anExternalAddress
	"Set the receiver's 'get_color' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_color put: anExternalAddress!

get_color_at
	"Answer the <ExternalAddress> value of the receiver's 'get_color_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_color_at) asExternalAddress!

get_color_at: anExternalAddress
	"Set the receiver's 'get_color_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_color_at put: anExternalAddress!

get_command_id_at
	"Answer the <ExternalAddress> value of the receiver's 'get_command_id_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_command_id_at) asExternalAddress!

get_command_id_at: anExternalAddress
	"Set the receiver's 'get_command_id_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_command_id_at put: anExternalAddress!

get_count
	"Answer the <ExternalAddress> value of the receiver's 'get_count' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_count) asExternalAddress!

get_count: anExternalAddress
	"Set the receiver's 'get_count' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_count put: anExternalAddress!

get_group_id
	"Answer the <ExternalAddress> value of the receiver's 'get_group_id' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_group_id) asExternalAddress!

get_group_id: anExternalAddress
	"Set the receiver's 'get_group_id' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_group_id put: anExternalAddress!

get_group_id_at
	"Answer the <ExternalAddress> value of the receiver's 'get_group_id_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_group_id_at) asExternalAddress!

get_group_id_at: anExternalAddress
	"Set the receiver's 'get_group_id_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_group_id_at put: anExternalAddress!

get_index_of
	"Answer the <ExternalAddress> value of the receiver's 'get_index_of' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_index_of) asExternalAddress!

get_index_of: anExternalAddress
	"Set the receiver's 'get_index_of' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_index_of put: anExternalAddress!

get_label
	"Answer the <ExternalAddress> value of the receiver's 'get_label' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_label) asExternalAddress!

get_label: anExternalAddress
	"Set the receiver's 'get_label' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_label put: anExternalAddress!

get_label_at
	"Answer the <ExternalAddress> value of the receiver's 'get_label_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_label_at) asExternalAddress!

get_label_at: anExternalAddress
	"Set the receiver's 'get_label_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_label_at put: anExternalAddress!

get_sub_menu
	"Answer the <ExternalAddress> value of the receiver's 'get_sub_menu' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_sub_menu) asExternalAddress!

get_sub_menu: anExternalAddress
	"Set the receiver's 'get_sub_menu' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_sub_menu put: anExternalAddress!

get_sub_menu_at
	"Answer the <ExternalAddress> value of the receiver's 'get_sub_menu_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_sub_menu_at) asExternalAddress!

get_sub_menu_at: anExternalAddress
	"Set the receiver's 'get_sub_menu_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_sub_menu_at put: anExternalAddress!

get_type
	"Answer the <ExternalAddress> value of the receiver's 'get_type' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_type) asExternalAddress!

get_type: anExternalAddress
	"Set the receiver's 'get_type' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_type put: anExternalAddress!

get_type_at
	"Answer the <ExternalAddress> value of the receiver's 'get_type_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_type_at) asExternalAddress!

get_type_at: anExternalAddress
	"Set the receiver's 'get_type_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_type_at put: anExternalAddress!

getCommandIdAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_getCommandIdAt_cefMenuModel:index:
				ifAbsentBindTo: self get_command_id_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

getCount
	| method |
	method := self class externalMethodAt: #_getCount_cefMenuModel: ifAbsentBindTo: self get_count.
	^method value: self withArguments: (Array with: self)!

getGroupId_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_getGroupId_cefMenuModel:commandId:
				ifAbsentBindTo: self get_group_id.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

getGroupIdAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_getGroupIdAt_cefMenuModel:index:
				ifAbsentBindTo: self get_group_id_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

getIndexOf_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_getIndexOf_cefMenuModel:commandId:
				ifAbsentBindTo: self get_index_of.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

getLabel_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_getLabel_cefMenuModel:commandId:
				ifAbsentBindTo: self get_label.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

getLabelAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_getLabelAt_cefMenuModel:index:
				ifAbsentBindTo: self get_label_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

getSubMenu_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_getSubMenu_cefMenuModel:commandId:
				ifAbsentBindTo: self get_sub_menu.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

getSubMenuAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_getSubMenuAt_cefMenuModel:index:
				ifAbsentBindTo: self get_sub_menu_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

getType_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_getType_cefMenuModel:commandId:
				ifAbsentBindTo: self get_type.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

getTypeAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_getTypeAt_cefMenuModel:index:
				ifAbsentBindTo: self get_type_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

has_accelerator
	"Answer the <ExternalAddress> value of the receiver's 'has_accelerator' field."

	^(bytes uintPtrAtOffset: _OffsetOf_has_accelerator) asExternalAddress!

has_accelerator: anExternalAddress
	"Set the receiver's 'has_accelerator' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_has_accelerator put: anExternalAddress!

has_accelerator_at
	"Answer the <ExternalAddress> value of the receiver's 'has_accelerator_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_has_accelerator_at) asExternalAddress!

has_accelerator_at: anExternalAddress
	"Set the receiver's 'has_accelerator_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_has_accelerator_at put: anExternalAddress!

insert_check_item_at
	"Answer the <ExternalAddress> value of the receiver's 'insert_check_item_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_insert_check_item_at) asExternalAddress!

insert_check_item_at: anExternalAddress
	"Set the receiver's 'insert_check_item_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_insert_check_item_at put: anExternalAddress!

insert_item_at
	"Answer the <ExternalAddress> value of the receiver's 'insert_item_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_insert_item_at) asExternalAddress!

insert_item_at: anExternalAddress
	"Set the receiver's 'insert_item_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_insert_item_at put: anExternalAddress!

insert_radio_item_at
	"Answer the <ExternalAddress> value of the receiver's 'insert_radio_item_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_insert_radio_item_at) asExternalAddress!

insert_radio_item_at: anExternalAddress
	"Set the receiver's 'insert_radio_item_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_insert_radio_item_at put: anExternalAddress!

insert_separator_at
	"Answer the <ExternalAddress> value of the receiver's 'insert_separator_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_insert_separator_at) asExternalAddress!

insert_separator_at: anExternalAddress
	"Set the receiver's 'insert_separator_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_insert_separator_at put: anExternalAddress!

insert_sub_menu_at
	"Answer the <ExternalAddress> value of the receiver's 'insert_sub_menu_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_insert_sub_menu_at) asExternalAddress!

insert_sub_menu_at: anExternalAddress
	"Set the receiver's 'insert_sub_menu_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_insert_sub_menu_at put: anExternalAddress!

insertCheckItemAt_index: index commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_insertCheckItemAt_cefMenuModel:index:commandId:label:
				ifAbsentBindTo: self insert_check_item_at.
	arguments := Array new: 4.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: commandId;
		at: 4 put: label.
	^method value: self withArguments: arguments!

insertItemAt_index: index commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_insertItemAt_cefMenuModel:index:commandId:label:
				ifAbsentBindTo: self insert_item_at.
	arguments := Array new: 4.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: commandId;
		at: 4 put: label.
	^method value: self withArguments: arguments!

insertRadioItemAt_index: index commandId: commandId label: label groupId: groupId
	| method arguments |
	method := self class
				externalMethodAt: #_insertRadioItemAt_cefMenuModel:index:commandId:label:groupId:
				ifAbsentBindTo: self insert_radio_item_at.
	arguments := Array new: 5.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: commandId;
		at: 4 put: label;
		at: 5 put: groupId.
	^method value: self withArguments: arguments!

insertSeperatorAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_insertSeperatorAt_cefMenuModel:index:
				ifAbsentBindTo: self insert_separator_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

insertSubMenuAt_index: index commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_insertSubMenuAt_cefMenuModel:index:commandId:label:
				ifAbsentBindTo: self insert_sub_menu_at.
	arguments := Array new: 4.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: commandId;
		at: 4 put: label.
	^method value: self withArguments: arguments!

is_checked
	"Answer the <ExternalAddress> value of the receiver's 'is_checked' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_checked) asExternalAddress!

is_checked: anExternalAddress
	"Set the receiver's 'is_checked' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_checked put: anExternalAddress!

is_checked_at
	"Answer the <ExternalAddress> value of the receiver's 'is_checked_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_checked_at) asExternalAddress!

is_checked_at: anExternalAddress
	"Set the receiver's 'is_checked_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_checked_at put: anExternalAddress!

is_enabled
	"Answer the <ExternalAddress> value of the receiver's 'is_enabled' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_enabled) asExternalAddress!

is_enabled: anExternalAddress
	"Set the receiver's 'is_enabled' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_enabled put: anExternalAddress!

is_enabled_at
	"Answer the <ExternalAddress> value of the receiver's 'is_enabled_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_enabled_at) asExternalAddress!

is_enabled_at: anExternalAddress
	"Set the receiver's 'is_enabled_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_enabled_at put: anExternalAddress!

is_sub_menu
	"Answer the <ExternalAddress> value of the receiver's 'is_sub_menu' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_sub_menu) asExternalAddress!

is_sub_menu: anExternalAddress
	"Set the receiver's 'is_sub_menu' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_sub_menu put: anExternalAddress!

is_visible
	"Answer the <ExternalAddress> value of the receiver's 'is_visible' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_visible) asExternalAddress!

is_visible: anExternalAddress
	"Set the receiver's 'is_visible' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_visible put: anExternalAddress!

is_visible_at
	"Answer the <ExternalAddress> value of the receiver's 'is_visible_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_is_visible_at) asExternalAddress!

is_visible_at: anExternalAddress
	"Set the receiver's 'is_visible_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_is_visible_at put: anExternalAddress!

isChecked_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_isChecked_cefMenuModel:commandId:
				ifAbsentBindTo: self is_checked.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

isCheckedAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_isCheckedAt_cefMenuModel:index:
				ifAbsentBindTo: self is_checked_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

isEnabled_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_isEnabled_cefMenuModel:commandId:
				ifAbsentBindTo: self is_enabled.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

isEnabledAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_isEnabledAt_cefMenuModel:index:
				ifAbsentBindTo: self is_enabled_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

isSubMenu
	| method |
	method := self class externalMethodAt: #_isSubMenu_cefMenuModel: ifAbsentBindTo: self is_sub_menu.
	^method value: self withArguments: (Array with: self)!

isVisible_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_isVisible_cefMenuModel:commandId:
				ifAbsentBindTo: self is_visible.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

isVisibleAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_isVisibleAt_cefMenuModel:index:
				ifAbsentBindTo: self is_visible_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

remove
	"Answer the <ExternalAddress> value of the receiver's 'remove' field."

	^(bytes uintPtrAtOffset: _OffsetOf_remove) asExternalAddress!

remove: anExternalAddress
	"Set the receiver's 'remove' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_remove put: anExternalAddress!

remove_accelerator
	"Answer the <ExternalAddress> value of the receiver's 'remove_accelerator' field."

	^(bytes uintPtrAtOffset: _OffsetOf_remove_accelerator) asExternalAddress!

remove_accelerator: anExternalAddress
	"Set the receiver's 'remove_accelerator' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_remove_accelerator put: anExternalAddress!

remove_accelerator_at
	"Answer the <ExternalAddress> value of the receiver's 'remove_accelerator_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_remove_accelerator_at) asExternalAddress!

remove_accelerator_at: anExternalAddress
	"Set the receiver's 'remove_accelerator_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_remove_accelerator_at put: anExternalAddress!

remove_at
	"Answer the <ExternalAddress> value of the receiver's 'remove_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_remove_at) asExternalAddress!

remove_at: anExternalAddress
	"Set the receiver's 'remove_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_remove_at put: anExternalAddress!

remove_commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_remove_cefMenuModel:commandId: ifAbsentBindTo: self remove.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: commandId.
	^method value: self withArguments: arguments!

removeAt_index: index
	| method arguments |
	method := self class externalMethodAt: #_removeAt_cefMenuModel:index: ifAbsentBindTo: self remove_at.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: index.
	^method value: self withArguments: arguments!

set_accelerator
	"Answer the <ExternalAddress> value of the receiver's 'set_accelerator' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_accelerator) asExternalAddress!

set_accelerator: anExternalAddress
	"Set the receiver's 'set_accelerator' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_accelerator put: anExternalAddress!

set_accelerator_at
	"Answer the <ExternalAddress> value of the receiver's 'set_accelerator_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_accelerator_at) asExternalAddress!

set_accelerator_at: anExternalAddress
	"Set the receiver's 'set_accelerator_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_accelerator_at put: anExternalAddress!

set_checked
	"Answer the <ExternalAddress> value of the receiver's 'set_checked' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_checked) asExternalAddress!

set_checked: anExternalAddress
	"Set the receiver's 'set_checked' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_checked put: anExternalAddress!

set_checked_at
	"Answer the <ExternalAddress> value of the receiver's 'set_checked_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_checked_at) asExternalAddress!

set_checked_at: anExternalAddress
	"Set the receiver's 'set_checked_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_checked_at put: anExternalAddress!

set_color
	"Answer the <ExternalAddress> value of the receiver's 'set_color' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_color) asExternalAddress!

set_color: anExternalAddress
	"Set the receiver's 'set_color' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_color put: anExternalAddress!

set_color_at
	"Answer the <ExternalAddress> value of the receiver's 'set_color_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_color_at) asExternalAddress!

set_color_at: anExternalAddress
	"Set the receiver's 'set_color_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_color_at put: anExternalAddress!

set_command_id_at
	"Answer the <ExternalAddress> value of the receiver's 'set_command_id_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_command_id_at) asExternalAddress!

set_command_id_at: anExternalAddress
	"Set the receiver's 'set_command_id_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_command_id_at put: anExternalAddress!

set_enabled
	"Answer the <ExternalAddress> value of the receiver's 'set_enabled' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_enabled) asExternalAddress!

set_enabled: anExternalAddress
	"Set the receiver's 'set_enabled' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_enabled put: anExternalAddress!

set_enabled_at
	"Answer the <ExternalAddress> value of the receiver's 'set_enabled_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_enabled_at) asExternalAddress!

set_enabled_at: anExternalAddress
	"Set the receiver's 'set_enabled_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_enabled_at put: anExternalAddress!

set_font_list
	"Answer the <ExternalAddress> value of the receiver's 'set_font_list' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_font_list) asExternalAddress!

set_font_list: anExternalAddress
	"Set the receiver's 'set_font_list' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_font_list put: anExternalAddress!

set_font_list_at
	"Answer the <ExternalAddress> value of the receiver's 'set_font_list_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_font_list_at) asExternalAddress!

set_font_list_at: anExternalAddress
	"Set the receiver's 'set_font_list_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_font_list_at put: anExternalAddress!

set_group_id
	"Answer the <ExternalAddress> value of the receiver's 'set_group_id' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_group_id) asExternalAddress!

set_group_id: anExternalAddress
	"Set the receiver's 'set_group_id' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_group_id put: anExternalAddress!

set_group_id_at
	"Answer the <ExternalAddress> value of the receiver's 'set_group_id_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_group_id_at) asExternalAddress!

set_group_id_at: anExternalAddress
	"Set the receiver's 'set_group_id_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_group_id_at put: anExternalAddress!

set_label
	"Answer the <ExternalAddress> value of the receiver's 'set_label' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_label) asExternalAddress!

set_label: anExternalAddress
	"Set the receiver's 'set_label' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_label put: anExternalAddress!

set_label_at
	"Answer the <ExternalAddress> value of the receiver's 'set_label_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_label_at) asExternalAddress!

set_label_at: anExternalAddress
	"Set the receiver's 'set_label_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_label_at put: anExternalAddress!

set_visible
	"Answer the <ExternalAddress> value of the receiver's 'set_visible' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_visible) asExternalAddress!

set_visible: anExternalAddress
	"Set the receiver's 'set_visible' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_visible put: anExternalAddress!

set_visible_at
	"Answer the <ExternalAddress> value of the receiver's 'set_visible_at' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_visible_at) asExternalAddress!

set_visible_at: anExternalAddress
	"Set the receiver's 'set_visible_at' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_visible_at put: anExternalAddress!

setChecked_commandId: commandId checked: checked
	| method arguments |
	method := self class externalMethodAt: #_setChecked_cefMenuModel:commandId:checked:
				ifAbsentBindTo: self set_checked.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: checked.
	^method value: self withArguments: arguments!

setCheckedAt_index: index checked: checked
	| method arguments |
	method := self class externalMethodAt: #_setCheckedAt_cefMenuModel:index:checked:
				ifAbsentBindTo: self set_checked_at.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: checked.
	^method value: self withArguments: arguments!

setCommandIdAt_index: index commandId: commandId
	| method arguments |
	method := self class externalMethodAt: #_setCommandIdAt_cefMenuModel:index:commandId:
				ifAbsentBindTo: self set_command_id_at.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: commandId.
	^method value: self withArguments: arguments!

setEnabled_commandId: commandId enabled: enabled
	| method arguments |
	method := self class externalMethodAt: #_setEnabled_cefMenuModel:commandId:enabled:
				ifAbsentBindTo: self set_enabled.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: enabled.
	^method value: self withArguments: arguments!

setEnabledAt_index: index enabled: enabled
	| method arguments |
	method := self class externalMethodAt: #_setEnabledAt_cefMenuModel:index:enabled:
				ifAbsentBindTo: self set_enabled_at.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: enabled.
	^method value: self withArguments: arguments!

setGroupId_commandId: commandId groupId: groupId
	| method arguments |
	method := self class externalMethodAt: #_setGroupId_cefMenuModel:commandId:groupId:
				ifAbsentBindTo: self set_group_id.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: groupId.
	^method value: self withArguments: arguments!

setGroupIdAt_index: index groupId: groupId
	| method arguments |
	method := self class externalMethodAt: #_setGroupIdAt_cefMenuModel:index:groupId:
				ifAbsentBindTo: self set_group_id_at.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: groupId.
	^method value: self withArguments: arguments!

setLabel_commandId: commandId label: label
	| method arguments |
	method := self class externalMethodAt: #_setLabel_cefMenuModel:commandId:label:
				ifAbsentBindTo: self set_label.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: label.
	^method value: self withArguments: arguments!

setLabelAt_index: index label: label
	| method arguments |
	method := self class externalMethodAt: #_setLabelAt_cefMenuModel:index:label:
				ifAbsentBindTo: self set_label_at.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: label.
	^method value: self withArguments: arguments!

setVisible_commandId: commandId visible: visible
	| method arguments |
	method := self class externalMethodAt: #_setVisible_cefMenuModel:commandId:visible:
				ifAbsentBindTo: self set_visible.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: commandId;
		at: 3 put: visible.
	^method value: self withArguments: arguments!

setVisibleAt_index: index visible: visible
	| method arguments |
	method := self class externalMethodAt: #_setVisibleAt_cefMenuModel:index:visible:
				ifAbsentBindTo: self set_visible_at.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: index;
		at: 3 put: visible.
	^method value: self withArguments: arguments! !
!CefMenuModel categoriesForMethods!
_addCheckItem_cefMenuModel:commandId:label:!**compiled accessors**!private! !
_addItem_cefMenuModel:commandId:label:!**compiled accessors**!private! !
_addRadioItem_cefMenuModel:commandId:label:groupId:!**compiled accessors**!private! !
_addSeparator_cefMenuModel:!**compiled accessors**!private! !
_addSubMenu_cefMenuModel:commandId:label:!**compiled accessors**!private! !
_callClear_cefMenuModel:!**compiled accessors**!private! !
_getCommandIdAt_cefMenuModel:index:!**compiled accessors**!private! !
_getCount_cefMenuModel:!**compiled accessors**!private! !
_getGroupId_cefMenuModel:commandId:!**compiled accessors**!private! !
_getGroupIdAt_cefMenuModel:index:!**compiled accessors**!private! !
_getIndexOf_cefMenuModel:commandId:!**compiled accessors**!private! !
_getLabel_cefMenuModel:commandId:!**compiled accessors**!private! !
_getLabelAt_cefMenuModel:index:!**compiled accessors**!private! !
_getSubMenu_cefMenuModel:commandId:!**compiled accessors**!private! !
_getSubMenuAt_cefMenuModel:index:!**compiled accessors**!private! !
_getType_cefMenuModel:commandId:!**compiled accessors**!private! !
_getTypeAt_cefMenuModel:index:!**compiled accessors**!private! !
_insertCheckItemAt_cefMenuModel:index:commandId:label:!**compiled accessors**!private! !
_insertItemAt_cefMenuModel:index:commandId:label:!**compiled accessors**!private! !
_insertRadioItemAt_cefMenuModel:index:commandId:label:groupId:!**compiled accessors**!private! !
_insertSeperatorAt_cefMenuModel:index:!**compiled accessors**!private! !
_insertSubMenuAt_cefMenuModel:index:commandId:label:!**compiled accessors**!private! !
_isChecked_cefMenuModel:commandId:!**compiled accessors**!private! !
_isCheckedAt_cefMenuModel:index:!**compiled accessors**!private! !
_isEnabled_cefMenuModel:commandId:!**compiled accessors**!private! !
_isEnabledAt_cefMenuModel:index:!**compiled accessors**!private! !
_isSubMenu_cefMenuModel:!**compiled accessors**!private! !
_isVisible_cefMenuModel:commandId:!**compiled accessors**!private! !
_isVisibleAt_cefMenuModel:index:!**compiled accessors**!private! !
_remove_cefMenuModel:commandId:!**compiled accessors**!private! !
_removeAt_cefMenuModel:index:!**compiled accessors**!private! !
_setChecked_cefMenuModel:commandId:checked:!**compiled accessors**!private! !
_setCheckedAt_cefMenuModel:index:checked:!**compiled accessors**!private! !
_setCommandIdAt_cefMenuModel:index:commandId:!**compiled accessors**!private! !
_setEnabled_cefMenuModel:commandId:enabled:!**compiled accessors**!private! !
_setEnabledAt_cefMenuModel:index:enabled:!**compiled accessors**!private! !
_setGroupId_cefMenuModel:commandId:groupId:!**compiled accessors**!private! !
_setGroupIdAt_cefMenuModel:index:groupId:!**compiled accessors**!private! !
_setLabel_cefMenuModel:commandId:label:!**compiled accessors**!private! !
_setLabelAt_cefMenuModel:index:label:!**compiled accessors**!private! !
_setVisible_cefMenuModel:commandId:visible:!**compiled accessors**!private! !
_setVisibleAt_cefMenuModel:index:visible:!**compiled accessors**!private! !
add_check_item!**compiled accessors**!public! !
add_check_item:!**compiled accessors**!public! !
add_item!**compiled accessors**!public! !
add_item:!**compiled accessors**!public! !
add_radio_item!**compiled accessors**!public! !
add_radio_item:!**compiled accessors**!public! !
add_separator!**compiled accessors**!public! !
add_separator:!**compiled accessors**!public! !
add_sub_menu!**compiled accessors**!public! !
add_sub_menu:!**compiled accessors**!public! !
addCheckItem_commandId:label:!**compiled accessors**!public! !
addItem_commandId:label:!**compiled accessors**!public! !
addRadioItem_commandId:label:groupId:!**compiled accessors**!public! !
addSeparator!**compiled accessors**!public! !
addSubMenu_commandId:label:!**compiled accessors**!public! !
callClear!**compiled accessors**!public! !
clear!**compiled accessors**!public! !
clear:!**compiled accessors**!public! !
get_accelerator!**compiled accessors**!public! !
get_accelerator:!**compiled accessors**!public! !
get_accelerator_at!**compiled accessors**!public! !
get_accelerator_at:!**compiled accessors**!public! !
get_color!**compiled accessors**!public! !
get_color:!**compiled accessors**!public! !
get_color_at!**compiled accessors**!public! !
get_color_at:!**compiled accessors**!public! !
get_command_id_at!**compiled accessors**!public! !
get_command_id_at:!**compiled accessors**!public! !
get_count!**compiled accessors**!public! !
get_count:!**compiled accessors**!public! !
get_group_id!**compiled accessors**!public! !
get_group_id:!**compiled accessors**!public! !
get_group_id_at!**compiled accessors**!public! !
get_group_id_at:!**compiled accessors**!public! !
get_index_of!**compiled accessors**!public! !
get_index_of:!**compiled accessors**!public! !
get_label!**compiled accessors**!public! !
get_label:!**compiled accessors**!public! !
get_label_at!**compiled accessors**!public! !
get_label_at:!**compiled accessors**!public! !
get_sub_menu!**compiled accessors**!public! !
get_sub_menu:!**compiled accessors**!public! !
get_sub_menu_at!**compiled accessors**!public! !
get_sub_menu_at:!**compiled accessors**!public! !
get_type!**compiled accessors**!public! !
get_type:!**compiled accessors**!public! !
get_type_at!**compiled accessors**!public! !
get_type_at:!**compiled accessors**!public! !
getCommandIdAt_index:!**compiled accessors**!public! !
getCount!**compiled accessors**!public! !
getGroupId_commandId:!**compiled accessors**!public! !
getGroupIdAt_index:!**compiled accessors**!public! !
getIndexOf_commandId:!**compiled accessors**!public! !
getLabel_commandId:!**compiled accessors**!public! !
getLabelAt_index:!**compiled accessors**!public! !
getSubMenu_commandId:!**compiled accessors**!public! !
getSubMenuAt_index:!**compiled accessors**!public! !
getType_commandId:!**compiled accessors**!public! !
getTypeAt_index:!**compiled accessors**!public! !
has_accelerator!**compiled accessors**!public! !
has_accelerator:!**compiled accessors**!public! !
has_accelerator_at!**compiled accessors**!public! !
has_accelerator_at:!**compiled accessors**!public! !
insert_check_item_at!**compiled accessors**!public! !
insert_check_item_at:!**compiled accessors**!public! !
insert_item_at!**compiled accessors**!public! !
insert_item_at:!**compiled accessors**!public! !
insert_radio_item_at!**compiled accessors**!public! !
insert_radio_item_at:!**compiled accessors**!public! !
insert_separator_at!**compiled accessors**!public! !
insert_separator_at:!**compiled accessors**!public! !
insert_sub_menu_at!**compiled accessors**!public! !
insert_sub_menu_at:!**compiled accessors**!public! !
insertCheckItemAt_index:commandId:label:!**compiled accessors**!public! !
insertItemAt_index:commandId:label:!**compiled accessors**!public! !
insertRadioItemAt_index:commandId:label:groupId:!**compiled accessors**!public! !
insertSeperatorAt_index:!**compiled accessors**!public! !
insertSubMenuAt_index:commandId:label:!**compiled accessors**!public! !
is_checked!**compiled accessors**!public! !
is_checked:!**compiled accessors**!public! !
is_checked_at!**compiled accessors**!public! !
is_checked_at:!**compiled accessors**!public! !
is_enabled!**compiled accessors**!public! !
is_enabled:!**compiled accessors**!public! !
is_enabled_at!**compiled accessors**!public! !
is_enabled_at:!**compiled accessors**!public! !
is_sub_menu!**compiled accessors**!public! !
is_sub_menu:!**compiled accessors**!public! !
is_visible!**compiled accessors**!public! !
is_visible:!**compiled accessors**!public! !
is_visible_at!**compiled accessors**!public! !
is_visible_at:!**compiled accessors**!public! !
isChecked_commandId:!**compiled accessors**!public! !
isCheckedAt_index:!**compiled accessors**!public! !
isEnabled_commandId:!**compiled accessors**!public! !
isEnabledAt_index:!**compiled accessors**!public! !
isSubMenu!**compiled accessors**!public! !
isVisible_commandId:!**compiled accessors**!public! !
isVisibleAt_index:!**compiled accessors**!public! !
remove!**compiled accessors**!public! !
remove:!**compiled accessors**!public! !
remove_accelerator!**compiled accessors**!public! !
remove_accelerator:!**compiled accessors**!public! !
remove_accelerator_at!**compiled accessors**!public! !
remove_accelerator_at:!**compiled accessors**!public! !
remove_at!**compiled accessors**!public! !
remove_at:!**compiled accessors**!public! !
remove_commandId:!**compiled accessors**!public! !
removeAt_index:!**compiled accessors**!public! !
set_accelerator!**compiled accessors**!public! !
set_accelerator:!**compiled accessors**!public! !
set_accelerator_at!**compiled accessors**!public! !
set_accelerator_at:!**compiled accessors**!public! !
set_checked!**compiled accessors**!public! !
set_checked:!**compiled accessors**!public! !
set_checked_at!**compiled accessors**!public! !
set_checked_at:!**compiled accessors**!public! !
set_color!**compiled accessors**!public! !
set_color:!**compiled accessors**!public! !
set_color_at!**compiled accessors**!public! !
set_color_at:!**compiled accessors**!public! !
set_command_id_at!**compiled accessors**!public! !
set_command_id_at:!**compiled accessors**!public! !
set_enabled!**compiled accessors**!public! !
set_enabled:!**compiled accessors**!public! !
set_enabled_at!**compiled accessors**!public! !
set_enabled_at:!**compiled accessors**!public! !
set_font_list!**compiled accessors**!public! !
set_font_list:!**compiled accessors**!public! !
set_font_list_at!**compiled accessors**!public! !
set_font_list_at:!**compiled accessors**!public! !
set_group_id!**compiled accessors**!public! !
set_group_id:!**compiled accessors**!public! !
set_group_id_at!**compiled accessors**!public! !
set_group_id_at:!**compiled accessors**!public! !
set_label!**compiled accessors**!public! !
set_label:!**compiled accessors**!public! !
set_label_at!**compiled accessors**!public! !
set_label_at:!**compiled accessors**!public! !
set_visible!**compiled accessors**!public! !
set_visible:!**compiled accessors**!public! !
set_visible_at!**compiled accessors**!public! !
set_visible_at:!**compiled accessors**!public! !
setChecked_commandId:checked:!**compiled accessors**!public! !
setCheckedAt_index:checked:!**compiled accessors**!public! !
setCommandIdAt_index:commandId:!**compiled accessors**!public! !
setEnabled_commandId:enabled:!**compiled accessors**!public! !
setEnabledAt_index:enabled:!**compiled accessors**!public! !
setGroupId_commandId:groupId:!**compiled accessors**!public! !
setGroupIdAt_index:groupId:!**compiled accessors**!public! !
setLabel_commandId:label:!**compiled accessors**!public! !
setLabelAt_index:label:!**compiled accessors**!public! !
setVisible_commandId:visible:!**compiled accessors**!public! !
setVisibleAt_index:visible:!**compiled accessors**!public! !
!

!CefMenuModel class methodsFor!

defineFields
	"CefMenuModel compileDefinition"

	super defineFields.
	self
		defineField: #is_sub_menu
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel*'));
		defineField: #clear
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel*')
					smalltalkName: #callClear);
		defineField: #get_count
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: dword CefMenuModel*'));
		defineField: #add_separator
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel*'));
		defineField: #add_item
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword CefString*')
					smalltalkName: #addItem_commandId:label:);
		defineField: #add_check_item
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword CefString*')
					smalltalkName: #addCheckItem_commandId:label:);
		defineField: #add_radio_item
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword CefString* sdword')
					smalltalkName: #addRadioItem_commandId:label:groupId:);
		defineField: #add_sub_menu
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefMenuModel* CefMenuModel* sdword CefString*')
					smalltalkName: #addSubMenu_commandId:label:);
		defineField: #insert_separator_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #insertSeperatorAt_index:);
		defineField: #insert_item_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword CefString*')
					smalltalkName: #insertItemAt_index:commandId:label:);
		defineField: #insert_check_item_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword CefString*')
					smalltalkName: #insertCheckItemAt_index:commandId:label:);
		defineField: #insert_radio_item_at
			type: (MethodField descriptor: (ExternalDescriptor
							fromString: 'stdcall: sdword CefMenuModel* dword sdword CefString* sdword')
					smalltalkName: #insertRadioItemAt_index:commandId:label:groupId:);
		defineField: #insert_sub_menu_at
			type: (MethodField descriptor: (ExternalDescriptor
							fromString: 'stdcall: CefMenuModel* CefMenuModel* dword sdword CefString*')
					smalltalkName: #insertSubMenuAt_index:commandId:label:);
		defineField: #remove
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #remove_commandId:);
		defineField: #remove_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #removeAt_index:);
		defineField: #get_index_of
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #getIndexOf_commandId:);
		defineField: #get_command_id_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #getCommandIdAt_index:);
		defineField: #set_command_id_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword')
					smalltalkName: #setCommandIdAt_index:commandId:);
		defineField: #get_label
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefStringUserfree* CefMenuModel* sdword')
					smalltalkName: #getLabel_commandId:);
		defineField: #get_label_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefStringUserfree* CefMenuModel* dword')
					smalltalkName: #getLabelAt_index:);
		defineField: #set_label
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword CefString*')
					smalltalkName: #setLabel_commandId:label:);
		defineField: #set_label_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword CefString*')
					smalltalkName: #setLabelAt_index:label:);
		defineField: #get_type
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #getType_commandId:);
		defineField: #get_type_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #getTypeAt_index:);
		defineField: #get_group_id
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #getGroupId_commandId:);
		defineField: #get_group_id_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #getGroupIdAt_index:);
		defineField: #set_group_id
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword sdword')
					smalltalkName: #setGroupId_commandId:groupId:);
		defineField: #set_group_id_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword')
					smalltalkName: #setGroupIdAt_index:groupId:);
		defineField: #get_sub_menu
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefMenuModel* CefMenuModel* sdword')
					smalltalkName: #getSubMenu_commandId:);
		defineField: #get_sub_menu_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefMenuModel* CefMenuModel* dword')
					smalltalkName: #getSubMenuAt_index:);
		defineField: #is_visible
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #isVisible_commandId:);
		defineField: #is_visible_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #isVisibleAt_index:);
		defineField: #set_visible
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword sdword')
					smalltalkName: #setVisible_commandId:visible:);
		defineField: #set_visible_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword')
					smalltalkName: #setVisibleAt_index:visible:);
		defineField: #is_enabled
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #isEnabled_commandId:);
		defineField: #is_enabled_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #isEnabledAt_index:);
		defineField: #set_enabled
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword sdword')
					smalltalkName: #setEnabled_commandId:enabled:);
		defineField: #set_enabled_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword')
					smalltalkName: #setEnabledAt_index:enabled:);
		defineField: #is_checked
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword')
					smalltalkName: #isChecked_commandId:);
		defineField: #is_checked_at
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword')
					smalltalkName: #isCheckedAt_index:);
		defineField: #set_checked
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* sdword sdword')
					smalltalkName: #setChecked_commandId:checked:);
		defineField: #set_checked_at
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefMenuModel* dword sdword')
					smalltalkName: #setCheckedAt_index:checked:);
		defineField: #has_accelerator type: LPVOIDField new;
		defineField: #has_accelerator_at type: LPVOIDField new;
		defineField: #set_accelerator type: LPVOIDField new;
		defineField: #set_accelerator_at type: LPVOIDField new;
		defineField: #remove_accelerator type: LPVOIDField new;
		defineField: #remove_accelerator_at type: LPVOIDField new;
		defineField: #get_accelerator type: LPVOIDField new;
		defineField: #get_accelerator_at type: LPVOIDField new;
		defineField: #set_color type: LPVOIDField new;
		defineField: #set_color_at type: LPVOIDField new;
		defineField: #get_color type: LPVOIDField new;
		defineField: #get_color_at type: LPVOIDField new;
		defineField: #set_font_list type: LPVOIDField new;
		defineField: #set_font_list_at type: LPVOIDField new!

getFieldNames
	^#(#base #is_sub_menu #clear #get_count #add_separator #add_item #add_check_item #add_radio_item #add_sub_menu #insert_separator_at #insert_item_at #insert_check_item_at #insert_radio_item_at #insert_sub_menu_at #remove #remove_at #get_index_of #get_command_id_at #set_command_id_at #get_label #get_label_at #set_label #set_label_at #get_type #get_type_at #get_group_id #get_group_id_at #set_group_id #set_group_id_at #get_sub_menu #get_sub_menu_at #is_visible #is_visible_at #set_visible #set_visible_at #is_enabled #is_enabled_at #set_enabled #set_enabled_at #is_checked #is_checked_at #set_checked #set_checked_at #has_accelerator #has_accelerator_at #set_accelerator #set_accelerator_at #remove_accelerator #remove_accelerator_at #get_accelerator #get_accelerator_at #set_color #set_color_at #get_color #get_color_at #set_font_list #set_font_list_at)! !
!CefMenuModel class categoriesForMethods!
defineFields!public! !
getFieldNames!**compiled accessors**!constants!private! !
!

