"Filed out from Dolphin Smalltalk"!

CefReferenceCountedObject subclass: #CefBrowserHost
	instanceVariableNames: ''
	classVariableNames: '_OffsetOf_add_dev_tools_message_observer _OffsetOf_add_word_to_dictionary _OffsetOf_can_execute_chrome_command _OffsetOf_can_zoom _OffsetOf_close_browser _OffsetOf_close_dev_tools _OffsetOf_download_image _OffsetOf_drag_source_ended_at _OffsetOf_drag_source_system_drag_ended _OffsetOf_drag_target_drag_enter _OffsetOf_drag_target_drag_leave _OffsetOf_drag_target_drag_over _OffsetOf_drag_target_drop _OffsetOf_execute_chrome_command _OffsetOf_execute_dev_tools_method _OffsetOf_exit_fullscreen _OffsetOf_find _OffsetOf_get_browser _OffsetOf_get_client _OffsetOf_get_default_zoom_level _OffsetOf_get_extension _OffsetOf_get_navigation_entries _OffsetOf_get_opener_window_handle _OffsetOf_get_request_context _OffsetOf_get_visible_navigation_entry _OffsetOf_get_window_handle _OffsetOf_get_windowless_frame_rate _OffsetOf_get_zoom_level _OffsetOf_has_dev_tools _OffsetOf_has_view _OffsetOf_ime_cancel_composition _OffsetOf_ime_commit_text _OffsetOf_ime_finish_composing_text _OffsetOf_ime_set_composition _OffsetOf_invalidate _OffsetOf_is_audio_muted _OffsetOf_is_background_host _OffsetOf_is_fullscreen _OffsetOf_is_window_rendering_disabled _OffsetOf_notify_move_or_resize_started _OffsetOf_notify_screen_info_changed _OffsetOf_print _OffsetOf_print_to_pdf _OffsetOf_replace_misspelling _OffsetOf_run_file_dialog _OffsetOf_send_capture_lost_event _OffsetOf_send_dev_tools_message _OffsetOf_send_external_begin_frame _OffsetOf_send_key_event _OffsetOf_send_mouse_click_event _OffsetOf_send_mouse_move_event _OffsetOf_send_mouse_wheel_event _OffsetOf_send_touch_event _OffsetOf_set_accessibility_state _OffsetOf_set_audio_muted _OffsetOf_set_auto_resize_enabled _OffsetOf_set_focus _OffsetOf_set_windowless_frame_frate _OffsetOf_set_zoom_level _OffsetOf_show_dev_tools _OffsetOf_start_download _OffsetOf_stop_finding _OffsetOf_try_close_browser _OffsetOf_was_hidden _OffsetOf_was_resized _OffsetOf_zoom'
	poolDictionaries: ''
	classInstanceVariableNames: ''!
CefBrowserHost guid: (GUID fromString: '{8832c51e-bf20-4226-b13c-02fae84854d9}')!
CefBrowserHost addClassConstant: '_OffsetOf_add_dev_tools_message_observer' value: 16r7C!
CefBrowserHost addClassConstant: '_OffsetOf_add_word_to_dictionary' value: 16r88!
CefBrowserHost addClassConstant: '_OffsetOf_can_execute_chrome_command' value: 16r114!
CefBrowserHost addClassConstant: '_OffsetOf_can_zoom' value: 16r38!
CefBrowserHost addClassConstant: '_OffsetOf_close_browser' value: 16r18!
CefBrowserHost addClassConstant: '_OffsetOf_close_dev_tools' value: 16r6C!
CefBrowserHost addClassConstant: '_OffsetOf_download_image' value: 16r54!
CefBrowserHost addClassConstant: '_OffsetOf_drag_source_ended_at' value: 16rE8!
CefBrowserHost addClassConstant: '_OffsetOf_drag_source_system_drag_ended' value: 16rEC!
CefBrowserHost addClassConstant: '_OffsetOf_drag_target_drag_enter' value: 16rD8!
CefBrowserHost addClassConstant: '_OffsetOf_drag_target_drag_leave' value: 16rE0!
CefBrowserHost addClassConstant: '_OffsetOf_drag_target_drag_over' value: 16rDC!
CefBrowserHost addClassConstant: '_OffsetOf_drag_target_drop' value: 16rE4!
CefBrowserHost addClassConstant: '_OffsetOf_execute_chrome_command' value: 16r118!
CefBrowserHost addClassConstant: '_OffsetOf_execute_dev_tools_method' value: 16r78!
CefBrowserHost addClassConstant: '_OffsetOf_exit_fullscreen' value: 16r110!
CefBrowserHost addClassConstant: '_OffsetOf_find' value: 16r60!
CefBrowserHost addClassConstant: '_OffsetOf_get_browser' value: 16r14!
CefBrowserHost addClassConstant: '_OffsetOf_get_client' value: 16r30!
CefBrowserHost addClassConstant: '_OffsetOf_get_default_zoom_level' value: 16r40!
CefBrowserHost addClassConstant: '_OffsetOf_get_extension' value: 16rFC!
CefBrowserHost addClassConstant: '_OffsetOf_get_navigation_entries' value: 16r80!
CefBrowserHost addClassConstant: '_OffsetOf_get_opener_window_handle' value: 16r28!
CefBrowserHost addClassConstant: '_OffsetOf_get_request_context' value: 16r34!
CefBrowserHost addClassConstant: '_OffsetOf_get_visible_navigation_entry' value: 16rF0!
CefBrowserHost addClassConstant: '_OffsetOf_get_window_handle' value: 16r24!
CefBrowserHost addClassConstant: '_OffsetOf_get_windowless_frame_rate' value: 16rC0!
CefBrowserHost addClassConstant: '_OffsetOf_get_zoom_level' value: 16r44!
CefBrowserHost addClassConstant: '_OffsetOf_has_dev_tools' value: 16r70!
CefBrowserHost addClassConstant: '_OffsetOf_has_view' value: 16r2C!
CefBrowserHost addClassConstant: '_OffsetOf_ime_cancel_composition' value: 16rD4!
CefBrowserHost addClassConstant: '_OffsetOf_ime_commit_text' value: 16rCC!
CefBrowserHost addClassConstant: '_OffsetOf_ime_finish_composing_text' value: 16rD0!
CefBrowserHost addClassConstant: '_OffsetOf_ime_set_composition' value: 16rC8!
CefBrowserHost addClassConstant: '_OffsetOf_invalidate' value: 16r9C!
CefBrowserHost addClassConstant: '_OffsetOf_is_audio_muted' value: 16r108!
CefBrowserHost addClassConstant: '_OffsetOf_is_background_host' value: 16r100!
CefBrowserHost addClassConstant: '_OffsetOf_is_fullscreen' value: 16r10C!
CefBrowserHost addClassConstant: '_OffsetOf_is_window_rendering_disabled' value: 16r8C!
CefBrowserHost addClassConstant: '_OffsetOf_notify_move_or_resize_started' value: 16rBC!
CefBrowserHost addClassConstant: '_OffsetOf_notify_screen_info_changed' value: 16r98!
CefBrowserHost addClassConstant: '_OffsetOf_print' value: 16r58!
CefBrowserHost addClassConstant: '_OffsetOf_print_to_pdf' value: 16r5C!
CefBrowserHost addClassConstant: '_OffsetOf_replace_misspelling' value: 16r84!
CefBrowserHost addClassConstant: '_OffsetOf_run_file_dialog' value: 16r4C!
CefBrowserHost addClassConstant: '_OffsetOf_send_capture_lost_event' value: 16rB8!
CefBrowserHost addClassConstant: '_OffsetOf_send_dev_tools_message' value: 16r74!
CefBrowserHost addClassConstant: '_OffsetOf_send_external_begin_frame' value: 16rA0!
CefBrowserHost addClassConstant: '_OffsetOf_send_key_event' value: 16rA4!
CefBrowserHost addClassConstant: '_OffsetOf_send_mouse_click_event' value: 16rA8!
CefBrowserHost addClassConstant: '_OffsetOf_send_mouse_move_event' value: 16rAC!
CefBrowserHost addClassConstant: '_OffsetOf_send_mouse_wheel_event' value: 16rB0!
CefBrowserHost addClassConstant: '_OffsetOf_send_touch_event' value: 16rB4!
CefBrowserHost addClassConstant: '_OffsetOf_set_accessibility_state' value: 16rF4!
CefBrowserHost addClassConstant: '_OffsetOf_set_audio_muted' value: 16r104!
CefBrowserHost addClassConstant: '_OffsetOf_set_auto_resize_enabled' value: 16rF8!
CefBrowserHost addClassConstant: '_OffsetOf_set_focus' value: 16r20!
CefBrowserHost addClassConstant: '_OffsetOf_set_windowless_frame_frate' value: 16rC4!
CefBrowserHost addClassConstant: '_OffsetOf_set_zoom_level' value: 16r48!
CefBrowserHost addClassConstant: '_OffsetOf_show_dev_tools' value: 16r68!
CefBrowserHost addClassConstant: '_OffsetOf_start_download' value: 16r50!
CefBrowserHost addClassConstant: '_OffsetOf_stop_finding' value: 16r64!
CefBrowserHost addClassConstant: '_OffsetOf_try_close_browser' value: 16r1C!
CefBrowserHost addClassConstant: '_OffsetOf_was_hidden' value: 16r94!
CefBrowserHost addClassConstant: '_OffsetOf_was_resized' value: 16r90!
CefBrowserHost addClassConstant: '_OffsetOf_zoom' value: 16r3C!
CefBrowserHost comment: ''!
!CefBrowserHost categoriesForClass!External-Data-Structured! !
!CefBrowserHost methodsFor!

_closeBrowser_cefBrowserHost: cefBrowserHost forceClose: forceClose
	<stdcall: void close_browser CefBrowserHost* sdword>
	^self invalidCall: _failureCode!

_getBrowser_cefBrowserHost: cefBrowserHost
	<stdcall: CefBrowser* get_browser CefBrowserHost*>
	^self invalidCall: _failureCode!

_getClient_cefBrowserHost: cefBrowserHost
	<stdcall: CefClient* get_client CefBrowserHost*>
	^self invalidCall: _failureCode!

_getOpenerWindowHandle_cefBrowserHost: cefBrowserHost
	<stdcall: handle get_opener_window_handle CefBrowserHost*>
	^self invalidCall: _failureCode!

_getRequestContext_cefBrowserHost: cefBrowserHost
	<stdcall: CefRequestContext* get_request_context CefBrowserHost*>
	^self invalidCall: _failureCode!

_getWindowHandle_cefBrowserHost: cefBrowserHost
	<stdcall: handle get_window_handle CefBrowserHost*>
	^self invalidCall: _failureCode!

_hasView_cefBrowserHost: cefBrowserHost
	<stdcall: sdword has_view CefBrowserHost*>
	^self invalidCall: _failureCode!

_sendKeyEvent_cefBrowserHost: cefBrowserHost event: event
	<stdcall: void send_key_event CefBrowserHost* CefKeyEvent*>
	^self invalidCall: _failureCode!

_sendMouseClickEvent_cefBrowserHost: cefBrowserHost event: event mouseButtonType: mouseButtonType mouseUp: mouseUp clickCount: clickCount
	<stdcall: void send_mouse_click_event CefBrowserHost* CefMouseEvent* sdword sdword sdword>
	^self invalidCall: _failureCode!

_sendMouseMoveEvent_cefBrowserHost: cefBrowserHost event: event mouseLeave: mouseLeave
	<stdcall: void send_mouse_move_event CefBrowserHost* CefMouseEvent* sdword>
	^self invalidCall: _failureCode!

_sendMouseWheelEvent_cefBrowserHost: cefBrowserHost event: event deltaX: deltaX deltaY: deltaY
	<stdcall: void send_mouse_wheel_event CefBrowserHost* CefMouseEvent* sdword sdword>
	^self invalidCall: _failureCode!

_setFocus_cefBrowserHost: cefBrowserHost focus: focus
	<stdcall: void set_focus CefBrowserHost* sdword>
	^self invalidCall: _failureCode!

_tryCloseBrowser_cefBrowserHost: cefBrowserHost
	<stdcall: sdword try_close_browser CefBrowserHost*>
	^self invalidCall: _failureCode!

_wasHidden_cefBrowserHost: cefBrowserHost hidden: hidden
	<stdcall: void was_hidden CefBrowserHost* sdword>
	^self invalidCall: _failureCode!

_wasResized_cefBrowserHost: cefBrowserHost
	<stdcall: void was_resized CefBrowserHost*>
	^self invalidCall: _failureCode!

add_dev_tools_message_observer
	"Answer the <Integer> value of the receiver's 'add_dev_tools_message_observer' field."

	^bytes dwordAtOffset: _OffsetOf_add_dev_tools_message_observer!

add_dev_tools_message_observer: anInteger
	"Set the receiver's 'add_dev_tools_message_observer' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_add_dev_tools_message_observer put: anInteger!

add_word_to_dictionary
	"Answer the <Integer> value of the receiver's 'add_word_to_dictionary' field."

	^bytes dwordAtOffset: _OffsetOf_add_word_to_dictionary!

add_word_to_dictionary: anInteger
	"Set the receiver's 'add_word_to_dictionary' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_add_word_to_dictionary put: anInteger!

can_execute_chrome_command
	"Answer the <Integer> value of the receiver's 'can_execute_chrome_command' field."

	^bytes dwordAtOffset: _OffsetOf_can_execute_chrome_command!

can_execute_chrome_command: anInteger
	"Set the receiver's 'can_execute_chrome_command' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_can_execute_chrome_command put: anInteger!

can_zoom
	"Answer the <Integer> value of the receiver's 'can_zoom' field."

	^bytes dwordAtOffset: _OffsetOf_can_zoom!

can_zoom: anInteger
	"Set the receiver's 'can_zoom' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_can_zoom put: anInteger!

close_browser
	"Answer the <ExternalAddress> value of the receiver's 'close_browser' field."

	^(bytes uintPtrAtOffset: _OffsetOf_close_browser) asExternalAddress!

close_browser: anExternalAddress
	"Set the receiver's 'close_browser' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_close_browser put: anExternalAddress!

close_dev_tools
	"Answer the <Integer> value of the receiver's 'close_dev_tools' field."

	^bytes dwordAtOffset: _OffsetOf_close_dev_tools!

close_dev_tools: anInteger
	"Set the receiver's 'close_dev_tools' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_close_dev_tools put: anInteger!

closeBrowser_forceClose: forceClose
	| method arguments |
	method := self class externalMethodAt: #_closeBrowser_cefBrowserHost:forceClose:
				ifAbsentBindTo: self close_browser.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: forceClose.
	^method value: self withArguments: arguments!

download_image
	"Answer the <Integer> value of the receiver's 'download_image' field."

	^bytes dwordAtOffset: _OffsetOf_download_image!

download_image: anInteger
	"Set the receiver's 'download_image' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_download_image put: anInteger!

drag_source_ended_at
	"Answer the <Integer> value of the receiver's 'drag_source_ended_at' field."

	^bytes dwordAtOffset: _OffsetOf_drag_source_ended_at!

drag_source_ended_at: anInteger
	"Set the receiver's 'drag_source_ended_at' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_drag_source_ended_at put: anInteger!

drag_source_system_drag_ended
	"Answer the <Integer> value of the receiver's 'drag_source_system_drag_ended' field."

	^bytes dwordAtOffset: _OffsetOf_drag_source_system_drag_ended!

drag_source_system_drag_ended: anInteger
	"Set the receiver's 'drag_source_system_drag_ended' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_drag_source_system_drag_ended put: anInteger!

drag_target_drag_enter
	"Answer the <Integer> value of the receiver's 'drag_target_drag_enter' field."

	^bytes dwordAtOffset: _OffsetOf_drag_target_drag_enter!

drag_target_drag_enter: anInteger
	"Set the receiver's 'drag_target_drag_enter' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_drag_target_drag_enter put: anInteger!

drag_target_drag_leave
	"Answer the <Integer> value of the receiver's 'drag_target_drag_leave' field."

	^bytes dwordAtOffset: _OffsetOf_drag_target_drag_leave!

drag_target_drag_leave: anInteger
	"Set the receiver's 'drag_target_drag_leave' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_drag_target_drag_leave put: anInteger!

drag_target_drag_over
	"Answer the <Integer> value of the receiver's 'drag_target_drag_over' field."

	^bytes dwordAtOffset: _OffsetOf_drag_target_drag_over!

drag_target_drag_over: anInteger
	"Set the receiver's 'drag_target_drag_over' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_drag_target_drag_over put: anInteger!

drag_target_drop
	"Answer the <Integer> value of the receiver's 'drag_target_drop' field."

	^bytes dwordAtOffset: _OffsetOf_drag_target_drop!

drag_target_drop: anInteger
	"Set the receiver's 'drag_target_drop' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_drag_target_drop put: anInteger!

execute_chrome_command
	"Answer the <Integer> value of the receiver's 'execute_chrome_command' field."

	^bytes dwordAtOffset: _OffsetOf_execute_chrome_command!

execute_chrome_command: anInteger
	"Set the receiver's 'execute_chrome_command' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_execute_chrome_command put: anInteger!

execute_dev_tools_method
	"Answer the <Integer> value of the receiver's 'execute_dev_tools_method' field."

	^bytes dwordAtOffset: _OffsetOf_execute_dev_tools_method!

execute_dev_tools_method: anInteger
	"Set the receiver's 'execute_dev_tools_method' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_execute_dev_tools_method put: anInteger!

exit_fullscreen
	"Answer the <Integer> value of the receiver's 'exit_fullscreen' field."

	^bytes dwordAtOffset: _OffsetOf_exit_fullscreen!

exit_fullscreen: anInteger
	"Set the receiver's 'exit_fullscreen' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_exit_fullscreen put: anInteger!

find
	"Answer the <Integer> value of the receiver's 'find' field."

	^bytes dwordAtOffset: _OffsetOf_find!

find: anInteger
	"Set the receiver's 'find' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_find put: anInteger!

get_browser
	"Answer the <ExternalAddress> value of the receiver's 'get_browser' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_browser) asExternalAddress!

get_browser: anExternalAddress
	"Set the receiver's 'get_browser' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_browser put: anExternalAddress!

get_client
	"Answer the <ExternalAddress> value of the receiver's 'get_client' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_client) asExternalAddress!

get_client: anExternalAddress
	"Set the receiver's 'get_client' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_client put: anExternalAddress!

get_default_zoom_level
	"Answer the <Integer> value of the receiver's 'get_default_zoom_level' field."

	^bytes dwordAtOffset: _OffsetOf_get_default_zoom_level!

get_default_zoom_level: anInteger
	"Set the receiver's 'get_default_zoom_level' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_get_default_zoom_level put: anInteger!

get_extension
	"Answer the <Integer> value of the receiver's 'get_extension' field."

	^bytes dwordAtOffset: _OffsetOf_get_extension!

get_extension: anInteger
	"Set the receiver's 'get_extension' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_get_extension put: anInteger!

get_navigation_entries
	"Answer the <Integer> value of the receiver's 'get_navigation_entries' field."

	^bytes dwordAtOffset: _OffsetOf_get_navigation_entries!

get_navigation_entries: anInteger
	"Set the receiver's 'get_navigation_entries' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_get_navigation_entries put: anInteger!

get_opener_window_handle
	"Answer the <ExternalAddress> value of the receiver's 'get_opener_window_handle' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_opener_window_handle) asExternalAddress!

get_opener_window_handle: anExternalAddress
	"Set the receiver's 'get_opener_window_handle' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_opener_window_handle put: anExternalAddress!

get_request_context
	"Answer the <ExternalAddress> value of the receiver's 'get_request_context' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_request_context) asExternalAddress!

get_request_context: anExternalAddress
	"Set the receiver's 'get_request_context' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_request_context put: anExternalAddress!

get_visible_navigation_entry
	"Answer the <Integer> value of the receiver's 'get_visible_navigation_entry' field."

	^bytes dwordAtOffset: _OffsetOf_get_visible_navigation_entry!

get_visible_navigation_entry: anInteger
	"Set the receiver's 'get_visible_navigation_entry' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_get_visible_navigation_entry put: anInteger!

get_window_handle
	"Answer the <ExternalAddress> value of the receiver's 'get_window_handle' field."

	^(bytes uintPtrAtOffset: _OffsetOf_get_window_handle) asExternalAddress!

get_window_handle: anExternalAddress
	"Set the receiver's 'get_window_handle' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_get_window_handle put: anExternalAddress!

get_windowless_frame_rate
	"Answer the <Integer> value of the receiver's 'get_windowless_frame_rate' field."

	^bytes dwordAtOffset: _OffsetOf_get_windowless_frame_rate!

get_windowless_frame_rate: anInteger
	"Set the receiver's 'get_windowless_frame_rate' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_get_windowless_frame_rate put: anInteger!

get_zoom_level
	"Answer the <Integer> value of the receiver's 'get_zoom_level' field."

	^bytes dwordAtOffset: _OffsetOf_get_zoom_level!

get_zoom_level: anInteger
	"Set the receiver's 'get_zoom_level' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_get_zoom_level put: anInteger!

getBrowser
	| method |
	method := self class externalMethodAt: #_getBrowser_cefBrowserHost: ifAbsentBindTo: self get_browser.
	^method value: self withArguments: (Array with: self)!

getClient
	| method |
	method := self class externalMethodAt: #_getClient_cefBrowserHost: ifAbsentBindTo: self get_client.
	^method value: self withArguments: (Array with: self)!

getOpenerWindowHandle
	| method |
	method := self class externalMethodAt: #_getOpenerWindowHandle_cefBrowserHost:
				ifAbsentBindTo: self get_opener_window_handle.
	^method value: self withArguments: (Array with: self)!

getRequestContext
	| method |
	method := self class externalMethodAt: #_getRequestContext_cefBrowserHost:
				ifAbsentBindTo: self get_request_context.
	^method value: self withArguments: (Array with: self)!

getWindowHandle
	| method |
	method := self class externalMethodAt: #_getWindowHandle_cefBrowserHost:
				ifAbsentBindTo: self get_window_handle.
	^method value: self withArguments: (Array with: self)!

has_dev_tools
	"Answer the <Integer> value of the receiver's 'has_dev_tools' field."

	^bytes dwordAtOffset: _OffsetOf_has_dev_tools!

has_dev_tools: anInteger
	"Set the receiver's 'has_dev_tools' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_has_dev_tools put: anInteger!

has_view
	"Answer the <ExternalAddress> value of the receiver's 'has_view' field."

	^(bytes uintPtrAtOffset: _OffsetOf_has_view) asExternalAddress!

has_view: anExternalAddress
	"Set the receiver's 'has_view' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_has_view put: anExternalAddress!

hasView
	| method |
	method := self class externalMethodAt: #_hasView_cefBrowserHost: ifAbsentBindTo: self has_view.
	^method value: self withArguments: (Array with: self)!

ime_cancel_composition
	"Answer the <Integer> value of the receiver's 'ime_cancel_composition' field."

	^bytes dwordAtOffset: _OffsetOf_ime_cancel_composition!

ime_cancel_composition: anInteger
	"Set the receiver's 'ime_cancel_composition' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_ime_cancel_composition put: anInteger!

ime_commit_text
	"Answer the <Integer> value of the receiver's 'ime_commit_text' field."

	^bytes dwordAtOffset: _OffsetOf_ime_commit_text!

ime_commit_text: anInteger
	"Set the receiver's 'ime_commit_text' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_ime_commit_text put: anInteger!

ime_finish_composing_text
	"Answer the <Integer> value of the receiver's 'ime_finish_composing_text' field."

	^bytes dwordAtOffset: _OffsetOf_ime_finish_composing_text!

ime_finish_composing_text: anInteger
	"Set the receiver's 'ime_finish_composing_text' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_ime_finish_composing_text put: anInteger!

ime_set_composition
	"Answer the <Integer> value of the receiver's 'ime_set_composition' field."

	^bytes dwordAtOffset: _OffsetOf_ime_set_composition!

ime_set_composition: anInteger
	"Set the receiver's 'ime_set_composition' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_ime_set_composition put: anInteger!

invalidate
	"Answer the <Integer> value of the receiver's 'invalidate' field."

	^bytes dwordAtOffset: _OffsetOf_invalidate!

invalidate: anInteger
	"Set the receiver's 'invalidate' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_invalidate put: anInteger!

is_audio_muted
	"Answer the <Integer> value of the receiver's 'is_audio_muted' field."

	^bytes dwordAtOffset: _OffsetOf_is_audio_muted!

is_audio_muted: anInteger
	"Set the receiver's 'is_audio_muted' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_is_audio_muted put: anInteger!

is_background_host
	"Answer the <Integer> value of the receiver's 'is_background_host' field."

	^bytes dwordAtOffset: _OffsetOf_is_background_host!

is_background_host: anInteger
	"Set the receiver's 'is_background_host' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_is_background_host put: anInteger!

is_fullscreen
	"Answer the <Integer> value of the receiver's 'is_fullscreen' field."

	^bytes dwordAtOffset: _OffsetOf_is_fullscreen!

is_fullscreen: anInteger
	"Set the receiver's 'is_fullscreen' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_is_fullscreen put: anInteger!

is_window_rendering_disabled
	"Answer the <Integer> value of the receiver's 'is_window_rendering_disabled' field."

	^bytes dwordAtOffset: _OffsetOf_is_window_rendering_disabled!

is_window_rendering_disabled: anInteger
	"Set the receiver's 'is_window_rendering_disabled' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_is_window_rendering_disabled put: anInteger!

notify_move_or_resize_started
	"Answer the <Integer> value of the receiver's 'notify_move_or_resize_started' field."

	^bytes dwordAtOffset: _OffsetOf_notify_move_or_resize_started!

notify_move_or_resize_started: anInteger
	"Set the receiver's 'notify_move_or_resize_started' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_notify_move_or_resize_started put: anInteger!

notify_screen_info_changed
	"Answer the <Integer> value of the receiver's 'notify_screen_info_changed' field."

	^bytes dwordAtOffset: _OffsetOf_notify_screen_info_changed!

notify_screen_info_changed: anInteger
	"Set the receiver's 'notify_screen_info_changed' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_notify_screen_info_changed put: anInteger!

print
	"Answer the <Integer> value of the receiver's 'print' field."

	^bytes dwordAtOffset: _OffsetOf_print!

print: anInteger
	"Set the receiver's 'print' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_print put: anInteger!

print_to_pdf
	"Answer the <Integer> value of the receiver's 'print_to_pdf' field."

	^bytes dwordAtOffset: _OffsetOf_print_to_pdf!

print_to_pdf: anInteger
	"Set the receiver's 'print_to_pdf' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_print_to_pdf put: anInteger!

replace_misspelling
	"Answer the <Integer> value of the receiver's 'replace_misspelling' field."

	^bytes dwordAtOffset: _OffsetOf_replace_misspelling!

replace_misspelling: anInteger
	"Set the receiver's 'replace_misspelling' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_replace_misspelling put: anInteger!

run_file_dialog
	"Answer the <Integer> value of the receiver's 'run_file_dialog' field."

	^bytes dwordAtOffset: _OffsetOf_run_file_dialog!

run_file_dialog: anInteger
	"Set the receiver's 'run_file_dialog' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_run_file_dialog put: anInteger!

send_capture_lost_event
	"Answer the <Integer> value of the receiver's 'send_capture_lost_event' field."

	^bytes dwordAtOffset: _OffsetOf_send_capture_lost_event!

send_capture_lost_event: anInteger
	"Set the receiver's 'send_capture_lost_event' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_send_capture_lost_event put: anInteger!

send_dev_tools_message
	"Answer the <Integer> value of the receiver's 'send_dev_tools_message' field."

	^bytes dwordAtOffset: _OffsetOf_send_dev_tools_message!

send_dev_tools_message: anInteger
	"Set the receiver's 'send_dev_tools_message' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_send_dev_tools_message put: anInteger!

send_external_begin_frame
	"Answer the <Integer> value of the receiver's 'send_external_begin_frame' field."

	^bytes dwordAtOffset: _OffsetOf_send_external_begin_frame!

send_external_begin_frame: anInteger
	"Set the receiver's 'send_external_begin_frame' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_send_external_begin_frame put: anInteger!

send_key_event
	"Answer the <ExternalAddress> value of the receiver's 'send_key_event' field."

	^(bytes uintPtrAtOffset: _OffsetOf_send_key_event) asExternalAddress!

send_key_event: anExternalAddress
	"Set the receiver's 'send_key_event' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_send_key_event put: anExternalAddress!

send_mouse_click_event
	"Answer the <ExternalAddress> value of the receiver's 'send_mouse_click_event' field."

	^(bytes uintPtrAtOffset: _OffsetOf_send_mouse_click_event) asExternalAddress!

send_mouse_click_event: anExternalAddress
	"Set the receiver's 'send_mouse_click_event' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_send_mouse_click_event put: anExternalAddress!

send_mouse_move_event
	"Answer the <ExternalAddress> value of the receiver's 'send_mouse_move_event' field."

	^(bytes uintPtrAtOffset: _OffsetOf_send_mouse_move_event) asExternalAddress!

send_mouse_move_event: anExternalAddress
	"Set the receiver's 'send_mouse_move_event' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_send_mouse_move_event put: anExternalAddress!

send_mouse_wheel_event
	"Answer the <ExternalAddress> value of the receiver's 'send_mouse_wheel_event' field."

	^(bytes uintPtrAtOffset: _OffsetOf_send_mouse_wheel_event) asExternalAddress!

send_mouse_wheel_event: anExternalAddress
	"Set the receiver's 'send_mouse_wheel_event' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_send_mouse_wheel_event put: anExternalAddress!

send_touch_event
	"Answer the <Integer> value of the receiver's 'send_touch_event' field."

	^bytes dwordAtOffset: _OffsetOf_send_touch_event!

send_touch_event: anInteger
	"Set the receiver's 'send_touch_event' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_send_touch_event put: anInteger!

sendKeyEvent_event: event
	| method arguments |
	method := self class externalMethodAt: #_sendKeyEvent_cefBrowserHost:event:
				ifAbsentBindTo: self send_key_event.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: event.
	^method value: self withArguments: arguments!

sendMouseClickEvent_event: event mouseButtonType: mouseButtonType mouseUp: mouseUp clickCount: clickCount
	| method arguments |
	method := self class
				externalMethodAt: #_sendMouseClickEvent_cefBrowserHost:event:mouseButtonType:mouseUp:clickCount:
				ifAbsentBindTo: self send_mouse_click_event.
	arguments := Array new: 5.
	arguments
		at: 1 put: self;
		at: 2 put: event;
		at: 3 put: mouseButtonType;
		at: 4 put: mouseUp;
		at: 5 put: clickCount.
	^method value: self withArguments: arguments!

sendMouseMoveEvent_event: event mouseLeave: mouseLeave
	| method arguments |
	method := self class externalMethodAt: #_sendMouseMoveEvent_cefBrowserHost:event:mouseLeave:
				ifAbsentBindTo: self send_mouse_move_event.
	arguments := Array new: 3.
	arguments
		at: 1 put: self;
		at: 2 put: event;
		at: 3 put: mouseLeave.
	^method value: self withArguments: arguments!

sendMouseWheelEvent_event: event deltaX: deltaX deltaY: deltaY
	| method arguments |
	method := self class externalMethodAt: #_sendMouseWheelEvent_cefBrowserHost:event:deltaX:deltaY:
				ifAbsentBindTo: self send_mouse_wheel_event.
	arguments := Array new: 4.
	arguments
		at: 1 put: self;
		at: 2 put: event;
		at: 3 put: deltaX;
		at: 4 put: deltaY.
	^method value: self withArguments: arguments!

set_accessibility_state
	"Answer the <Integer> value of the receiver's 'set_accessibility_state' field."

	^bytes dwordAtOffset: _OffsetOf_set_accessibility_state!

set_accessibility_state: anInteger
	"Set the receiver's 'set_accessibility_state' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_set_accessibility_state put: anInteger!

set_audio_muted
	"Answer the <Integer> value of the receiver's 'set_audio_muted' field."

	^bytes dwordAtOffset: _OffsetOf_set_audio_muted!

set_audio_muted: anInteger
	"Set the receiver's 'set_audio_muted' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_set_audio_muted put: anInteger!

set_auto_resize_enabled
	"Answer the <Integer> value of the receiver's 'set_auto_resize_enabled' field."

	^bytes dwordAtOffset: _OffsetOf_set_auto_resize_enabled!

set_auto_resize_enabled: anInteger
	"Set the receiver's 'set_auto_resize_enabled' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_set_auto_resize_enabled put: anInteger!

set_focus
	"Answer the <ExternalAddress> value of the receiver's 'set_focus' field."

	^(bytes uintPtrAtOffset: _OffsetOf_set_focus) asExternalAddress!

set_focus: anExternalAddress
	"Set the receiver's 'set_focus' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_set_focus put: anExternalAddress!

set_windowless_frame_frate
	"Answer the <Integer> value of the receiver's 'set_windowless_frame_frate' field."

	^bytes dwordAtOffset: _OffsetOf_set_windowless_frame_frate!

set_windowless_frame_frate: anInteger
	"Set the receiver's 'set_windowless_frame_frate' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_set_windowless_frame_frate put: anInteger!

set_zoom_level
	"Answer the <Integer> value of the receiver's 'set_zoom_level' field."

	^bytes dwordAtOffset: _OffsetOf_set_zoom_level!

set_zoom_level: anInteger
	"Set the receiver's 'set_zoom_level' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_set_zoom_level put: anInteger!

setFocus_focus: focus
	| method arguments |
	method := self class externalMethodAt: #_setFocus_cefBrowserHost:focus:
				ifAbsentBindTo: self set_focus.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: focus.
	^method value: self withArguments: arguments!

show_dev_tools
	"Answer the <Integer> value of the receiver's 'show_dev_tools' field."

	^bytes dwordAtOffset: _OffsetOf_show_dev_tools!

show_dev_tools: anInteger
	"Set the receiver's 'show_dev_tools' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_show_dev_tools put: anInteger!

start_download
	"Answer the <Integer> value of the receiver's 'start_download' field."

	^bytes dwordAtOffset: _OffsetOf_start_download!

start_download: anInteger
	"Set the receiver's 'start_download' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_start_download put: anInteger!

stop_finding
	"Answer the <Integer> value of the receiver's 'stop_finding' field."

	^bytes dwordAtOffset: _OffsetOf_stop_finding!

stop_finding: anInteger
	"Set the receiver's 'stop_finding' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_stop_finding put: anInteger!

try_close_browser
	"Answer the <ExternalAddress> value of the receiver's 'try_close_browser' field."

	^(bytes uintPtrAtOffset: _OffsetOf_try_close_browser) asExternalAddress!

try_close_browser: anExternalAddress
	"Set the receiver's 'try_close_browser' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_try_close_browser put: anExternalAddress!

tryCloseBrowser
	| method |
	method := self class externalMethodAt: #_tryCloseBrowser_cefBrowserHost:
				ifAbsentBindTo: self try_close_browser.
	^method value: self withArguments: (Array with: self)!

was_hidden
	"Answer the <Integer> value of the receiver's 'was_hidden' field."

	^bytes dwordAtOffset: _OffsetOf_was_hidden!

was_hidden: anInteger
	"Set the receiver's 'was_hidden' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_was_hidden put: anInteger!

was_resized
	"Answer the <ExternalAddress> value of the receiver's 'was_resized' field."

	^(bytes uintPtrAtOffset: _OffsetOf_was_resized) asExternalAddress!

was_resized: anExternalAddress
	"Set the receiver's 'was_resized' field to the value of the argument, anExternalAddress"

	bytes uintPtrAtOffset: _OffsetOf_was_resized put: anExternalAddress!

wasHidden_hidden: hidden
	| method arguments |
	method := self class externalMethodAt: #_wasHidden_cefBrowserHost:hidden:
				ifAbsentBindTo: self was_hidden.
	arguments := Array new: 2.
	arguments
		at: 1 put: self;
		at: 2 put: hidden.
	^method value: self withArguments: arguments!

wasResized
	| method |
	method := self class externalMethodAt: #_wasResized_cefBrowserHost: ifAbsentBindTo: self was_resized.
	^method value: self withArguments: (Array with: self)!

zoom
	"Answer the <Integer> value of the receiver's 'zoom' field."

	^bytes dwordAtOffset: _OffsetOf_zoom!

zoom: anInteger
	"Set the receiver's 'zoom' field to the value of the argument, anInteger"

	bytes dwordAtOffset: _OffsetOf_zoom put: anInteger! !
!CefBrowserHost categoriesForMethods!
_closeBrowser_cefBrowserHost:forceClose:!**compiled accessors**!private! !
_getBrowser_cefBrowserHost:!**compiled accessors**!private! !
_getClient_cefBrowserHost:!**compiled accessors**!private! !
_getOpenerWindowHandle_cefBrowserHost:!**compiled accessors**!private! !
_getRequestContext_cefBrowserHost:!**compiled accessors**!private! !
_getWindowHandle_cefBrowserHost:!**compiled accessors**!private! !
_hasView_cefBrowserHost:!**compiled accessors**!private! !
_sendKeyEvent_cefBrowserHost:event:!**compiled accessors**!private! !
_sendMouseClickEvent_cefBrowserHost:event:mouseButtonType:mouseUp:clickCount:!**compiled accessors**!private! !
_sendMouseMoveEvent_cefBrowserHost:event:mouseLeave:!**compiled accessors**!private! !
_sendMouseWheelEvent_cefBrowserHost:event:deltaX:deltaY:!**compiled accessors**!private! !
_setFocus_cefBrowserHost:focus:!**compiled accessors**!private! !
_tryCloseBrowser_cefBrowserHost:!**compiled accessors**!private! !
_wasHidden_cefBrowserHost:hidden:!**compiled accessors**!private! !
_wasResized_cefBrowserHost:!**compiled accessors**!private! !
add_dev_tools_message_observer!**compiled accessors**!public! !
add_dev_tools_message_observer:!**compiled accessors**!public! !
add_word_to_dictionary!**compiled accessors**!public! !
add_word_to_dictionary:!**compiled accessors**!public! !
can_execute_chrome_command!**compiled accessors**!public! !
can_execute_chrome_command:!**compiled accessors**!public! !
can_zoom!**compiled accessors**!public! !
can_zoom:!**compiled accessors**!public! !
close_browser!**compiled accessors**!public! !
close_browser:!**compiled accessors**!public! !
close_dev_tools!**compiled accessors**!public! !
close_dev_tools:!**compiled accessors**!public! !
closeBrowser_forceClose:!**compiled accessors**!public! !
download_image!**compiled accessors**!public! !
download_image:!**compiled accessors**!public! !
drag_source_ended_at!**compiled accessors**!public! !
drag_source_ended_at:!**compiled accessors**!public! !
drag_source_system_drag_ended!**compiled accessors**!public! !
drag_source_system_drag_ended:!**compiled accessors**!public! !
drag_target_drag_enter!**compiled accessors**!public! !
drag_target_drag_enter:!**compiled accessors**!public! !
drag_target_drag_leave!**compiled accessors**!public! !
drag_target_drag_leave:!**compiled accessors**!public! !
drag_target_drag_over!**compiled accessors**!public! !
drag_target_drag_over:!**compiled accessors**!public! !
drag_target_drop!**compiled accessors**!public! !
drag_target_drop:!**compiled accessors**!public! !
execute_chrome_command!**compiled accessors**!public! !
execute_chrome_command:!**compiled accessors**!public! !
execute_dev_tools_method!**compiled accessors**!public! !
execute_dev_tools_method:!**compiled accessors**!public! !
exit_fullscreen!**compiled accessors**!public! !
exit_fullscreen:!**compiled accessors**!public! !
find!**compiled accessors**!public! !
find:!**compiled accessors**!public! !
get_browser!**compiled accessors**!public! !
get_browser:!**compiled accessors**!public! !
get_client!**compiled accessors**!public! !
get_client:!**compiled accessors**!public! !
get_default_zoom_level!**compiled accessors**!public! !
get_default_zoom_level:!**compiled accessors**!public! !
get_extension!**compiled accessors**!public! !
get_extension:!**compiled accessors**!public! !
get_navigation_entries!**compiled accessors**!public! !
get_navigation_entries:!**compiled accessors**!public! !
get_opener_window_handle!**compiled accessors**!public! !
get_opener_window_handle:!**compiled accessors**!public! !
get_request_context!**compiled accessors**!public! !
get_request_context:!**compiled accessors**!public! !
get_visible_navigation_entry!**compiled accessors**!public! !
get_visible_navigation_entry:!**compiled accessors**!public! !
get_window_handle!**compiled accessors**!public! !
get_window_handle:!**compiled accessors**!public! !
get_windowless_frame_rate!**compiled accessors**!public! !
get_windowless_frame_rate:!**compiled accessors**!public! !
get_zoom_level!**compiled accessors**!public! !
get_zoom_level:!**compiled accessors**!public! !
getBrowser!**compiled accessors**!public! !
getClient!**compiled accessors**!public! !
getOpenerWindowHandle!**compiled accessors**!public! !
getRequestContext!**compiled accessors**!public! !
getWindowHandle!**compiled accessors**!public! !
has_dev_tools!**compiled accessors**!public! !
has_dev_tools:!**compiled accessors**!public! !
has_view!**compiled accessors**!public! !
has_view:!**compiled accessors**!public! !
hasView!**compiled accessors**!public! !
ime_cancel_composition!**compiled accessors**!public! !
ime_cancel_composition:!**compiled accessors**!public! !
ime_commit_text!**compiled accessors**!public! !
ime_commit_text:!**compiled accessors**!public! !
ime_finish_composing_text!**compiled accessors**!public! !
ime_finish_composing_text:!**compiled accessors**!public! !
ime_set_composition!**compiled accessors**!public! !
ime_set_composition:!**compiled accessors**!public! !
invalidate!**compiled accessors**!public! !
invalidate:!**compiled accessors**!public! !
is_audio_muted!**compiled accessors**!public! !
is_audio_muted:!**compiled accessors**!public! !
is_background_host!**compiled accessors**!public! !
is_background_host:!**compiled accessors**!public! !
is_fullscreen!**compiled accessors**!public! !
is_fullscreen:!**compiled accessors**!public! !
is_window_rendering_disabled!**compiled accessors**!public! !
is_window_rendering_disabled:!**compiled accessors**!public! !
notify_move_or_resize_started!**compiled accessors**!public! !
notify_move_or_resize_started:!**compiled accessors**!public! !
notify_screen_info_changed!**compiled accessors**!public! !
notify_screen_info_changed:!**compiled accessors**!public! !
print!**compiled accessors**!public! !
print:!**compiled accessors**!public! !
print_to_pdf!**compiled accessors**!public! !
print_to_pdf:!**compiled accessors**!public! !
replace_misspelling!**compiled accessors**!public! !
replace_misspelling:!**compiled accessors**!public! !
run_file_dialog!**compiled accessors**!public! !
run_file_dialog:!**compiled accessors**!public! !
send_capture_lost_event!**compiled accessors**!public! !
send_capture_lost_event:!**compiled accessors**!public! !
send_dev_tools_message!**compiled accessors**!public! !
send_dev_tools_message:!**compiled accessors**!public! !
send_external_begin_frame!**compiled accessors**!public! !
send_external_begin_frame:!**compiled accessors**!public! !
send_key_event!**compiled accessors**!public! !
send_key_event:!**compiled accessors**!public! !
send_mouse_click_event!**compiled accessors**!public! !
send_mouse_click_event:!**compiled accessors**!public! !
send_mouse_move_event!**compiled accessors**!public! !
send_mouse_move_event:!**compiled accessors**!public! !
send_mouse_wheel_event!**compiled accessors**!public! !
send_mouse_wheel_event:!**compiled accessors**!public! !
send_touch_event!**compiled accessors**!public! !
send_touch_event:!**compiled accessors**!public! !
sendKeyEvent_event:!**compiled accessors**!public! !
sendMouseClickEvent_event:mouseButtonType:mouseUp:clickCount:!**compiled accessors**!public! !
sendMouseMoveEvent_event:mouseLeave:!**compiled accessors**!public! !
sendMouseWheelEvent_event:deltaX:deltaY:!**compiled accessors**!public! !
set_accessibility_state!**compiled accessors**!public! !
set_accessibility_state:!**compiled accessors**!public! !
set_audio_muted!**compiled accessors**!public! !
set_audio_muted:!**compiled accessors**!public! !
set_auto_resize_enabled!**compiled accessors**!public! !
set_auto_resize_enabled:!**compiled accessors**!public! !
set_focus!**compiled accessors**!public! !
set_focus:!**compiled accessors**!public! !
set_windowless_frame_frate!**compiled accessors**!public! !
set_windowless_frame_frate:!**compiled accessors**!public! !
set_zoom_level!**compiled accessors**!public! !
set_zoom_level:!**compiled accessors**!public! !
setFocus_focus:!**compiled accessors**!public! !
show_dev_tools!**compiled accessors**!public! !
show_dev_tools:!**compiled accessors**!public! !
start_download!**compiled accessors**!public! !
start_download:!**compiled accessors**!public! !
stop_finding!**compiled accessors**!public! !
stop_finding:!**compiled accessors**!public! !
try_close_browser!**compiled accessors**!public! !
try_close_browser:!**compiled accessors**!public! !
tryCloseBrowser!**compiled accessors**!public! !
was_hidden!**compiled accessors**!public! !
was_hidden:!**compiled accessors**!public! !
was_resized!**compiled accessors**!public! !
was_resized:!**compiled accessors**!public! !
wasHidden_hidden:!**compiled accessors**!public! !
wasResized!**compiled accessors**!public! !
zoom!**compiled accessors**!public! !
zoom:!**compiled accessors**!public! !
!

!CefBrowserHost class methodsFor!

defineFields
	"CefBrowserHost  compileDefinition"

	super defineFields.
	self
		defineField: #get_browser
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefBrowser* CefBrowserHost*'));
		defineField: #close_browser
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: void CefBrowserHost* sdword')
					smalltalkName: #closeBrowser_forceClose:);
		defineField: #try_close_browser
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefBrowserHost*'));
		defineField: #set_focus
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: void CefBrowserHost* sdword')
					smalltalkName: #setFocus_focus:);
		defineField: #get_window_handle
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: handle CefBrowserHost*'));
		defineField: #get_opener_window_handle
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: handle CefBrowserHost*'));
		defineField: #has_view
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: sdword CefBrowserHost*'));
		defineField: #get_client
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: CefClient* CefBrowserHost*'));
		defineField: #get_request_context
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: CefRequestContext* CefBrowserHost*'));
		defineField: #can_zoom type: DWORDField new;
		defineField: #zoom type: DWORDField new;
		defineField: #get_default_zoom_level type: DWORDField new;
		defineField: #get_zoom_level type: DWORDField new;
		defineField: #set_zoom_level type: DWORDField new;
		defineField: #run_file_dialog type: DWORDField new;
		defineField: #start_download type: DWORDField new;
		defineField: #download_image type: DWORDField new;
		defineField: #print type: DWORDField new;
		defineField: #print_to_pdf type: DWORDField new;
		defineField: #find type: DWORDField new;
		defineField: #stop_finding type: DWORDField new;
		defineField: #show_dev_tools type: DWORDField new;
		defineField: #close_dev_tools type: DWORDField new;
		defineField: #has_dev_tools type: DWORDField new;
		defineField: #send_dev_tools_message type: DWORDField new;
		defineField: #execute_dev_tools_method type: DWORDField new;
		defineField: #add_dev_tools_message_observer type: DWORDField new;
		defineField: #get_navigation_entries type: DWORDField new;
		defineField: #replace_misspelling type: DWORDField new;
		defineField: #add_word_to_dictionary type: DWORDField new;
		defineField: #is_window_rendering_disabled type: DWORDField new;
		defineField: #was_resized
			type: (MethodField descriptor: (ExternalDescriptor fromString: 'stdcall: void CefBrowserHost*'));
		defineField: #was_hidden
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: void CefBrowserHost* sdword')
					smalltalkName: #wasHidden_hidden:);
		defineField: #notify_screen_info_changed type: DWORDField new;
		defineField: #invalidate type: DWORDField new;
		defineField: #send_external_begin_frame type: DWORDField new;
		defineField: #send_key_event
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: void CefBrowserHost* CefKeyEvent*')
					smalltalkName: #sendKeyEvent_event:);
		defineField: #send_mouse_click_event
			type: (MethodField descriptor: (ExternalDescriptor
							fromString: 'stdcall: void CefBrowserHost* CefMouseEvent* sdword sdword sdword')
					smalltalkName: #sendMouseClickEvent_event:mouseButtonType:mouseUp:clickCount:);
		defineField: #send_mouse_move_event
			type: (MethodField
					descriptor: (ExternalDescriptor fromString: 'stdcall: void CefBrowserHost* CefMouseEvent* sdword')
					smalltalkName: #sendMouseMoveEvent_event:mouseLeave:);
		defineField: #send_mouse_wheel_event
			type: (MethodField descriptor: (ExternalDescriptor
							fromString: 'stdcall: void CefBrowserHost* CefMouseEvent* sdword sdword')
					smalltalkName: #sendMouseWheelEvent_event:deltaX:deltaY:);
		defineField: #send_touch_event type: DWORDField new;
		defineField: #send_capture_lost_event type: DWORDField new;
		defineField: #notify_move_or_resize_started type: DWORDField new;
		defineField: #get_windowless_frame_rate type: DWORDField new;
		defineField: #set_windowless_frame_frate type: DWORDField new;
		defineField: #ime_set_composition type: DWORDField new;
		defineField: #ime_commit_text type: DWORDField new;
		defineField: #ime_finish_composing_text type: DWORDField new;
		defineField: #ime_cancel_composition type: DWORDField new;
		defineField: #drag_target_drag_enter type: DWORDField new;
		defineField: #drag_target_drag_over type: DWORDField new;
		defineField: #drag_target_drag_leave type: DWORDField new;
		defineField: #drag_target_drop type: DWORDField new;
		defineField: #drag_source_ended_at type: DWORDField new;
		defineField: #drag_source_system_drag_ended type: DWORDField new;
		defineField: #get_visible_navigation_entry type: DWORDField new;
		defineField: #set_accessibility_state type: DWORDField new;
		defineField: #set_auto_resize_enabled type: DWORDField new;
		defineField: #get_extension type: DWORDField new;
		defineField: #is_background_host type: DWORDField new;
		defineField: #set_audio_muted type: DWORDField new;
		defineField: #is_audio_muted type: DWORDField new;
		defineField: #is_fullscreen type: DWORDField new;
		defineField: #exit_fullscreen type: DWORDField new;
		defineField: #can_execute_chrome_command type: DWORDField new;
		defineField: #execute_chrome_command type: DWORDField new!

getFieldNames
	^#(#base #get_browser #close_browser #try_close_browser #set_focus #get_window_handle #get_opener_window_handle #has_view #get_client #get_request_context #can_zoom #zoom #get_default_zoom_level #get_zoom_level #set_zoom_level #run_file_dialog #start_download #download_image #print #print_to_pdf #find #stop_finding #show_dev_tools #close_dev_tools #has_dev_tools #send_dev_tools_message #execute_dev_tools_method #add_dev_tools_message_observer #get_navigation_entries #replace_misspelling #add_word_to_dictionary #is_window_rendering_disabled #was_resized #was_hidden #notify_screen_info_changed #invalidate #send_external_begin_frame #send_key_event #send_mouse_click_event #send_mouse_move_event #send_mouse_wheel_event #send_touch_event #send_capture_lost_event #notify_move_or_resize_started #get_windowless_frame_rate #set_windowless_frame_frate #ime_set_composition #ime_commit_text #ime_finish_composing_text #ime_cancel_composition #drag_target_drag_enter #drag_target_drag_over #drag_target_drag_leave #drag_target_drop #drag_source_ended_at #drag_source_system_drag_ended #get_visible_navigation_entry #set_accessibility_state #set_auto_resize_enabled #get_extension #is_background_host #set_audio_muted #is_audio_muted #is_fullscreen #exit_fullscreen #can_execute_chrome_command #execute_chrome_command)! !
!CefBrowserHost class categoriesForMethods!
defineFields!public! !
getFieldNames!**compiled accessors**!constants!private! !
!

